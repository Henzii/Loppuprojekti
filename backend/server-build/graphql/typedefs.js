"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
var apollo_server_express_1 = require("apollo-server-express");
var typeDefs = (0, apollo_server_express_1.gql)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n\n    scalar Upload\n    scalar Date\n\n    type Alias {\n        id: ID!\n        alias: String\n        user: Int\n    }\n    type File {\n        filename: String!\n        mimetype: String!\n        encoding: String!\n    }\n    type User {\n        id: ID!\n        name: String!\n        rooli: String!\n        email: String\n    }\n \n    type LogEntry {\n        date: String!\n        process: String!\n        type: String!\n        message: String!\n    }\n    type SimpleCourseStats {\n        nimi: String\n        rata: String\n        layout: String\n        par: Int\n        latest: Int\n        min: Float\n        max: Float\n        avg: Float\n        games: Int\n        tenLatestRounds: [Int]\n        tenLatestMedian: Float\n        hc: Float\n    }\n    type Setup {\n        minPlayersForMatch: Int!\n        minPlayersForHc: Int!\n        ignoreMatchBefore: Date!\n        ignoreHcBefore: Date!\n    }\n    input Game {\n        course: String!\n        layout: String!\n        date: String!\n        par: Int!\n        players: [Player]\n    }\n    input Player {\n        name: String!\n        total: Int!\n        scores: [Int!]!\n    }\n    type Query {\n        getUsers(active: Boolean): [User]!\n        getUser(id: Int, name: String): User\n        getMe(fetchFromDatabase: Boolean): User\n        getLogs(process: String): [LogEntry]!\n\n        getCourseStats: [SimpleCourseStats]\n        getAliases( userId: ID): [Alias]!\n\n        getCompetitions: [Competition]\n        getSetup: Setup!\n\n    }\n    type Competition {\n        game: Int\n        paivays: String\n        name: String\n        layout: String\n        par: Int\n        playerName: String\n        total: Int\n        hc: Float\n    }\n    type Mutation {\n        addUser(name: String! email: String password: String!): User\n        login(name: String! password: String!): String\n\n        addGame(game: Game!): Int\n        addAlias(userId: ID, alias: String!): Int\n        deleteAlias(aliasId: Int!): Boolean\n\n        uploadCsvFile(file: Upload!): File!\n\n        updateUser(email: String, password: String): String\n        activateUser(userId: ID!): String\n\n        setSetup(\n            minPlayersForMatch: Int,\n            minPlayersForHc: Int,\n            ignoreHcBefore: Date,\n            ignoreMatchBefore: Date\n        ): String\n    }\n"], ["\n\n    scalar Upload\n    scalar Date\n\n    type Alias {\n        id: ID!\n        alias: String\n        user: Int\n    }\n    type File {\n        filename: String!\n        mimetype: String!\n        encoding: String!\n    }\n    type User {\n        id: ID!\n        name: String!\n        rooli: String!\n        email: String\n    }\n \n    type LogEntry {\n        date: String!\n        process: String!\n        type: String!\n        message: String!\n    }\n    type SimpleCourseStats {\n        nimi: String\n        rata: String\n        layout: String\n        par: Int\n        latest: Int\n        min: Float\n        max: Float\n        avg: Float\n        games: Int\n        tenLatestRounds: [Int]\n        tenLatestMedian: Float\n        hc: Float\n    }\n    type Setup {\n        minPlayersForMatch: Int!\n        minPlayersForHc: Int!\n        ignoreMatchBefore: Date!\n        ignoreHcBefore: Date!\n    }\n    input Game {\n        course: String!\n        layout: String!\n        date: String!\n        par: Int!\n        players: [Player]\n    }\n    input Player {\n        name: String!\n        total: Int!\n        scores: [Int!]!\n    }\n    type Query {\n        getUsers(active: Boolean): [User]!\n        getUser(id: Int, name: String): User\n        getMe(fetchFromDatabase: Boolean): User\n        getLogs(process: String): [LogEntry]!\n\n        getCourseStats: [SimpleCourseStats]\n        getAliases( userId: ID): [Alias]!\n\n        getCompetitions: [Competition]\n        getSetup: Setup!\n\n    }\n    type Competition {\n        game: Int\n        paivays: String\n        name: String\n        layout: String\n        par: Int\n        playerName: String\n        total: Int\n        hc: Float\n    }\n    type Mutation {\n        addUser(name: String! email: String password: String!): User\n        login(name: String! password: String!): String\n\n        addGame(game: Game!): Int\n        addAlias(userId: ID, alias: String!): Int\n        deleteAlias(aliasId: Int!): Boolean\n\n        uploadCsvFile(file: Upload!): File!\n\n        updateUser(email: String, password: String): String\n        activateUser(userId: ID!): String\n\n        setSetup(\n            minPlayersForMatch: Int,\n            minPlayersForHc: Int,\n            ignoreHcBefore: Date,\n            ignoreMatchBefore: Date\n        ): String\n    }\n"])));
exports.default = typeDefs;
var templateObject_1;
