{"version":3,"sources":["graphql/mutations.js","hooks/useMe.js","components/LoggedUserProvider.jsx","components/FormikField.jsx","components/CreateAccount.jsx","components/LoginForm.jsx","components/LogoutButton.jsx","pages/Frontpage/LoggedFrontPage.jsx","pages/Frontpage/index.jsx","components/LoadingPage.jsx","utils/dateAndTine.js","pages/Logs/SingleLogEntry.jsx","pages/Logs/Logs.jsx","components/HideIfNotLogged.jsx","components/NaviLinkit.jsx","components/AppBar.jsx","pages/Stats/SimpleCourseStats.jsx","pages/Stats/Stats.jsx","components/UploadCsv.jsx","hooks/useAliases.js","components/Aliases.jsx","graphql/queries.js","hooks/useSetup.js","pages/Settings/AdminSettings.jsx","pages/Settings/Settings.jsx","hooks/useGetCompetitions.js","utils/competitionStuff.js","pages/Competitions/SingleCompetitions.jsx","pages/Competitions/PointsList.jsx","pages/Competitions/Competitions.jsx","components/UnActivatedUsers.jsx","pages/Admin/SimpleUser.jsx","pages/Admin/index.jsx","App.jsx","utils/apolloClient.js","utils/theme.js","index.jsx"],"names":["UPDATE_USER","gql","ACTIVATE_USER","SAVE_SETUP","UPLOAD_CSV","CREATE_USER","DELETE_USER","LOGIN","ADD_ALIAS","DELETE_ALIAS","GET_LOGS","GET_ME","GET_SIMPLE_COURSE_STATS","GET_ALIASES","useMe","fetchFromDatabase","undefined","useState","me","setMe","useQuery","variables","loading","data","useMutation","refetchQueries","updateMe","useEffect","getMe","update","a","res","clear","UserContext","createContext","useLoggedIn","useContext","LoggedUserProvider","children","Provider","value","FormikField","field","type","label","form","placeholder","console","log","TextField","name","onChange","error","errors","helperText","defaultProps","CreateAccount","createUser","createUserData","enqueueSnackbar","useSnackbar","handleCreation","tunnus","password","email","variant","addUser","id","Typography","paragraph","initialValues","password2","onSubmit","values","validateOnChange","validate","errorit","length","Grid","container","spacing","alignItems","item","xs","md","component","Button","LoginForm","loginUser","client","useApolloClient","handleLogin","e","preventDefault","target","window","scrollTo","sessionStorage","setItem","login","include","style","margin","columns","LoadingButton","size","LogoutButton","logged","handleLogout","clearStore","resetStore","onClick","LoggedFrontPage","loggedMe","className","to","Frontpage","strings","typeSpeed","backSpeed","backDelay","onComplete","ref","cursor","remove","href","align","LoadingPage","Backdrop","open","CircularProgress","convertUTCDateToLocalDate","date","newDate","Date","getTime","getTimezoneOffset","offset","hours","getHours","setHours","SingleLogEntry","process","message","paivays","TableRow","TableCell","toLocaleString","Logs","logsData","logit","setLogit","getLogs","Container","TableContainer","Table","TableHead","TableBody","map","l","i","HideIfNotLogged","rooli","loggedIn","propTypes","PropTypes","oneOfType","arrayOf","object","shape","isRequired","string","NaviLinkit","Wrap","text","AppBarLink","AppBar","ankkuri","setAnkkuri","menuOpen","Boolean","position","sx","minHeight","justifyContent","Toolbar","Box","display","IconButton","edge","color","mr","currentTarget","fontSize","Menu","anchorEl","onClose","MenuItem","flexGrow","colorMaker","par","score","diff","addPlus","number","useStyles","makeStyles","latest","best","avg","SimpleCourseStats","tyylit","min","showMore","setShowMore","Card","marginBottom","CardHeader","title","rata","subheader","layout","action","CardContent","games","Math","round","hc","Collapse","in","mountOnEnter","tenLatestRounds","r","key","marginRight","Stats","rataData","filter","setFilter","getCourseStats","Divider","c","includes","s","UploadCsv","uploadFile","encType","file","tiedosto","files","then","catch","accept","useAliases","userId","aliakset","setAliakset","addAliasMutation","deleteAliasMutationb","aliasQuery","getAliases","addAlias","alias","callBack","deleteAlias","aliasId","Aliases","handleAddAlias","handleRemoveAlias","width","del","SingleAlias","GET_COMPETITIONS","GET_USERS","GET_SETUP","GET_USER","useSetup","setup","setSetup","setupQuery","saveSetupMutation","getSetup","saveSetup","AdminSettings","handleChange","Object","keys","k","startsWith","Settings","gutterBottom","err","salasana1","salasana2","useGetCompetitions","compQuery","competitions","setCompetitions","getCompetitions","reduce","p","obj","find","x","gameId","game","course","players","push","playerName","total","plusminus","hcTotal","hcPlusminus","groupCompetitionsData","comp","sort","b","prevRank","ret","rank","points","calculateRanks","SingleCompetition","competition","PointsList","pisteTaulu","setPistetaulu","taulu","forEach","element","Competitions","showPoints","setShowPoints","UnActivatedUsers","users","setUsers","aktivoi","poista","getUsers","handleActivateUser","handleDeleteUser","u","Fragment","SimpleUser","user","saveUser","handleSaveUser","defaultValue","Admin","useLazyQuery","haeUser","getUser","App","path","options","particles","random","move","enable","zIndex","interactivity","events","onHover","mode","authLink","setContext","_","headers","token","getItem","authorization","ApolloClient","cache","InMemoryCache","link","concat","createUploadLink","uri","Breakpoint","theme","createTheme","typography","fontFamily","palette","primary","main","components","MuiCard","styleOverrides","root","borderRadius","paddingLeft","MuiCardHeader","MuiGrid","MuiTextField","MuiTypography","h1","h2","h3","MuiButton","MuiDivider","MuiTableCell","ReactDOM","render","ApolloProvider","maxSnack","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.2c871fd8.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const UPDATE_USER = gql`\n  mutation($email: String, $password: String, $userId: ID) {\n    updateUser(email: $email, password: $password, userId: $userId)\n  }\n`;\nexport const ACTIVATE_USER = gql`\n  mutation($userId: ID!) {\n    activateUser(userId: $userId)\n  }\n`;\nexport const SAVE_SETUP = gql`\n  mutation ($minPlayersForMatch: Int, $minPlayersForHc: Int, $ignoreHcBefore: Date, $ignoreMatchBefore: Date) {\n    setSetup(\n      minPlayersForMatch: $minPlayersForMatch,\n      minPlayersForHc: $minPlayersForHc,\n      ignoreHcBefore: $ignoreHcBefore,\n      ignoreMatchBefore: $ignoreMatchBefore\n    )\n  }\n`;\n\nexport const UPLOAD_CSV = gql`\n  mutation($file: Upload!) {\n    uploadCsvFile(file: $file) {\n      filename\n      mimetype\n      encoding\n    }\n  }\n`;\n\nexport const CREATE_USER = gql`\n  mutation($name: String!, $password: String!, $email: String) {\n    addUser(name: $name, password: $password, email: $email) {\n      id\n    }\n  }\n`;\nexport const DELETE_USER = gql`\nmutation ($userId: ID!) {\n  deleteUser(userId: $userId)\n}\n`;\nexport const LOGIN = gql`\nmutation($name: String!, $password: String!) {\n  login(name: $name, password: $password)\n  \n}\n`;\nexport const ADD_ALIAS = gql`\nmutation ($alias: String!, $userId: ID) {\n  addAlias(alias: $alias, userId: $userId)\n}\n`;\nexport const DELETE_ALIAS = gql`\nmutation ($aliasId: Int!) {\n  deleteAlias(aliasId: $aliasId)\n}\n`;\nexport const GET_LOGS = gql`\n  query {\n    getLogs {\n      date\n      process\n      type\n      message\n    }\n  }\n`;\n\nexport const GET_ME = gql`\nquery ($fetchFromDatabase: Boolean) {\n  getMe (fetchFromDatabase: $fetchFromDatabase) {\n    id\n    name\n    rooli\n    email\n  }\n}\n`;\n\nexport const GET_SIMPLE_COURSE_STATS = gql`\nquery {\n  getCourseStats {\n    rata\n    layout\n    par\n    min\n    max\n    avg\n    games\n    tenLatestRounds\n    hc\n  }\n}\n`;\nexport const GET_ALIASES = gql`\nquery ($userId: ID) {\n  getAliases (userId: $userId ) {\n    id\n    alias\n  }\n}\n`;\n","import { useMutation, useQuery } from '@apollo/client';\nimport { useState, useEffect } from 'react';\nimport { GET_ME, UPDATE_USER } from '../graphql/mutations';\n\nconst useMe = (fetchFromDatabase = undefined) => {\n  const [me, setMe] = useState(null);\n  const { loading, data } = useQuery(GET_ME, { variables: { fetchFromDatabase } });\n  const [updateMe] = useMutation(UPDATE_USER, {\n    refetchQueries:\n      [GET_ME,\n        {\n          variables: { fetchFromDatabase },\n        },\n      ],\n  });\n\n  useEffect(() => {\n    if (!loading) {\n      if (data?.getMe) {\n        setMe(data.getMe);\n      } else {\n        setMe(undefined);\n      }\n    }\n  }, [loading, data]);\n  const update = async (variables) => {\n    const res = await updateMe({ variables });\n    return res;\n  };\n  const clear = () => {\n    setMe(null);\n  };\n\n  return { me, update, clear };\n};\n\nexport default useMe;\n","import React, { createContext, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport useMe from '../hooks/useMe';\n\nconst UserContext = createContext();\n\nexport const useLoggedIn = () => useContext(UserContext);\n\nconst LoggedUserProvider = ({ children }) => {\n  const me = useMe();\n  return (\n    <UserContext.Provider value={me}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nLoggedUserProvider.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default LoggedUserProvider;\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField } from '@mui/material';\n\nconst FormikField = ({\n  field, type, label, form, placeholder,\n}) => {\n  console.log(field);\n  return (\n    <TextField\n      name={field.name}\n      value={field.value}\n      onChange={field.onChange}\n      type={type}\n      label={label}\n      placeholder={placeholder}\n      error={(form.errors[field.name])}\n      helperText={(form.errors[field.name]) ? form.errors[field.name] : ''}\n    />\n  );\n};\n\nFormikField.propTypes = {\n  field: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n  }).isRequired,\n  type: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  form: PropTypes.shape({\n    touched: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired,\n  }).isRequired,\n};\nFormikField.defaultProps = {\n  type: 'text',\n  label: null,\n  placeholder: null,\n};\n\nexport default FormikField;\n","/* eslint-disable no-unused-vars */\nimport {\n  Button,\n  Grid,\n  Typography,\n} from '@mui/material';\nimport { Formik, Field, Form } from 'formik';\nimport { useMutation } from '@apollo/client';\nimport React from 'react';\nimport { useSnackbar } from 'notistack';\nimport { CREATE_USER } from '../graphql/mutations';\nimport FormikField from './FormikField';\n\nfunction CreateAccount() {\n  const [createUser, createUserData] = useMutation(CREATE_USER);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleCreation = async ({ tunnus, password, email }) => {\n    try {\n      await createUser({\n        variables: {\n          name: tunnus,\n          password,\n          email,\n        },\n      });\n      enqueueSnackbar('Tunnus luotiin onnistuneesti!', { variant: 'success' });\n    } catch (error) {\n      enqueueSnackbar('Virhe tunnuksen luomisessa!', { variant: 'error' });\n    }\n  };\n\n  if (createUserData.data?.addUser.id) {\n    return (\n      <>\n        <Typography variant=\"h4\">Tunnus luotu</Typography>\n        <Typography paragraph>\n          Tunnus luotiin onnistuneesti! Voit kirjautua sillä sisään jahka se ensin aktivoidaan.\n        </Typography>\n      </>\n    );\n  }\n  return (\n    <Formik\n      initialValues={{\n        tunnus: '', password: '', password2: '', email: '',\n      }}\n      onSubmit={(values) => handleCreation(values)}\n      validateOnChange={false}\n      validate={(values) => {\n        const errorit = {};\n        if (values.password !== values.password2) {\n          errorit.password2 = 'Salasanat ei täsmää!';\n        } else if (values.password.length < 5) {\n          errorit.password = 'Hey ainakin 5 merkkiä pitkä salasana dänks';\n        }\n        if (values.tunnus.length <= 3) {\n          errorit.tunnus = 'Liian lyhyt tunnus';\n        }\n        return errorit;\n      }}\n    >\n      <Form>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item xs={12} md={6}>Tunnus:</Grid>\n          <Grid item xs={12} md={6}><Field name=\"tunnus\" component={FormikField} placeholder=\"Tunnus...\" /></Grid>\n          <Grid item xs={12} md={6}>Salasana:</Grid>\n          <Grid item xs={12} md={6}><Field name=\"password\" component={FormikField} type=\"password\" placeholder=\"Salasana...\" /></Grid>\n          <Grid item xs={12} md={6}>Vahvista salasana:</Grid>\n          <Grid item xs={12} md={6}><Field name=\"password2\" component={FormikField} type=\"password\" placeholder=\"Vahvista salasana\" /></Grid>\n          <Grid item xs={12} md={6}>Sähköposti:</Grid>\n          <Grid item xs={12} md={6}><Field name=\"email\" component={FormikField} type=\"email\" placeholder=\"Sähköposti\" /></Grid>\n          <Grid item xs={12} md={6}><Button type=\"submit\">Luo</Button></Grid>\n        </Grid>\n      </Form>\n    </Formik>\n  );\n}\nexport default CreateAccount;\n","import React from 'react';\nimport { Grid, TextField } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { useSnackbar } from 'notistack';\nimport { useApolloClient, useMutation } from '@apollo/client';\nimport { GET_ME, LOGIN } from '../graphql/mutations';\n\nfunction LoginForm() {\n  const [loginUser, { loading }] = useMutation(LOGIN);\n  const { enqueueSnackbar } = useSnackbar();\n  const client = useApolloClient();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await loginUser(\n        {\n          variables: {\n            name: e.target.tunnus.value,\n            password: e.target.password.value,\n          },\n        },\n      );\n      window.scrollTo(0, 0);\n      window.sessionStorage.setItem('suklaaJuna', res.data.login);\n      await client.refetchQueries({\n        include: [GET_ME],\n      });\n    } catch (error) {\n      enqueueSnackbar(`Väärä tunnus tai salasana (${error})`, { variant: 'error' });\n    } finally {\n      e.target.tunnus.value = '';\n      e.target.password.value = '';\n    }\n  };\n\n  return (\n    <div style={{ margin: '8px 0px' }}>\n      <form onSubmit={handleLogin}>\n        <Grid container columns={1} spacing={1}>\n          <Grid item xs={1}>\n            <TextField name=\"tunnus\" placeholder=\"Tunnus...\" />\n          </Grid>\n          <Grid item xs={1}>\n            <TextField name=\"password\" type=\"password\" variant=\"outlined\" placeholder=\"Salasana...\" />\n          </Grid>\n          <Grid item xs={1}>\n            <LoadingButton loading={loading} type=\"submit\" size=\"large\"> Kirjaudu</LoadingButton>\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n  );\n}\nexport default LoginForm;\n","import { Button } from '@mui/material';\nimport { useApolloClient } from '@apollo/client';\nimport React from 'react';\nimport { GET_ME } from '../graphql/mutations';\nimport { useLoggedIn } from './LoggedUserProvider';\n\nconst LogoutButton = () => {\n  const client = useApolloClient();\n  const logged = useLoggedIn();\n  const handleLogout = async () => {\n    await client.clearStore();\n    await client.resetStore();\n    await client.refetchQueries({ include: [GET_ME] });\n    window.sessionStorage.clear();\n    logged.clear();\n  };\n  return (\n    <Button onClick={handleLogout}>Logout</Button>\n  );\n};\n\nexport default LogoutButton;\n","import {\n  Typography,\n} from '@mui/material';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLoggedIn } from '../../components/LoggedUserProvider';\nimport LogoutButton from '../../components/LogoutButton';\n\nconst LoggedFrontPage = () => {\n  const loggedMe = useLoggedIn();\n\n  return (\n    <>\n      <div className=\"wideContainer wideContainerTop\">\n        <Typography variant=\"h2\">\n          Olet kirjautunut sisään\n        </Typography>\n        <Typography paragraph>\n          Olet kirjautunut sisään tunnuksella&nbsp;\n          <b>\n            {loggedMe?.me.name}\n          </b>\n        </Typography>\n        <Typography paragraph>\n          Jos haluat kirjautua ulos, voit erota välittömästi ryhmästä klikkaamalla&nbsp;\n          <LogoutButton />\n          &nbsp;-nappia\n        </Typography>\n      </div>\n      <div className=\"wideContainer splitContainer\">\n        <div className=\"darkContainer\">\n          <Typography variant=\"h2\">Aliakset</Typography>\n          <Typography paragraph>\n            Aliaskset yhdistävät Udiscin csv-tiedoston nimet käyttäjätunnuksiin. Aliaksia voi\n            lisätä&nbsp;\n            <Link to=\"/settings\">asetuksissa</Link>\n          </Typography>\n        </div>\n        <div>\n          &nbsp;\n        </div>\n      </div>\n      <div className=\"wideContainer splitContainer\">\n        <div>\n          &nbsp;\n        </div>\n        <div className=\"darkContainer\">\n          <Typography variant=\"h2\">CSV-tiedosto</Typography>\n          <Typography paragraph>\n            Udiscistä saatavan csv-tiedoston voi lähettää&nbsp;\n            <Link to=\"/upload\">Upload</Link>\n            &nbsp; -sivun kautta!\n          </Typography>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LoggedFrontPage;\n","import React from 'react';\nimport { Typography } from '@mui/material';\nimport Typed from 'react-typed';\n\nimport { useLoggedIn } from '../../components/LoggedUserProvider';\nimport CreateAccount from '../../components/CreateAccount';\nimport LoginForm from '../../components/LoginForm';\nimport LoggedFrontPage from './LoggedFrontPage';\n\nconst Frontpage = () => {\n  const loggedIn = useLoggedIn();\n  if (loggedIn.me) {\n    return (\n      <LoggedFrontPage />\n    );\n  }\n  return (\n    <>\n      <div className=\"wideContainer wideContainerTop\">\n        <Typography variant=\"h1\">\n          <Typed\n            strings={[\n              'fRisbeegolfkerh',\n              'Fisbeego',\n              'RFisbeegolf',\n              'Risbeegomfkerho',\n            ]}\n            typeSpeed={50}\n            backSpeed={40}\n            backDelay={10}\n            onComplete={(ref) => { ref.cursor.remove(); }}\n          />\n        </Typography>\n        <Typography paragraph>\n          Olet eksynyt Risbeegomfkerhon sivuille.\n        </Typography>\n        <Typography paragraph>\n          Voit&nbsp;\n          <a href=\"#login\">kirjautua sisään</a>\n          &nbsp;tai&nbsp;\n          <a href=\"#luoTunnus\">luoda tunnukset</a>\n          .\n        </Typography>\n      </div>\n      <div className=\"wideContainer splitContainer\">\n        <div className=\"darkContainer\">\n          <Typography paragraph align=\"center\">\n            <i>&quot;Hauki on kala&quot;</i>\n          </Typography>\n        </div>\n        <div id=\"login\">\n          <Typography variant=\"h3\">Kirjaudu sisään</Typography>\n          <Typography paragraph>\n            Syötä tunnuksesi ja salasanasi alla oleviin kenttiin kirjautuaksesi sisään.\n          </Typography>\n          <LoginForm />\n        </div>\n      </div>\n      <div className=\"wideContainer\" id=\"luoTunnus\">\n        <Typography variant=\"h3\">Luo tunnuket</Typography>\n        <Typography paragraph>\n          Luo tunnukset täyttämällä alla oleva lomake. Sähköpostiosoite ei ole pakollinen.\n        </Typography>\n        <Typography paragraph>\n          Tunnukset eivät ole käytettävissä heti luomisen jälkeen, vaan jonkun täytyy\n          aktivoida ne ensin.\n        </Typography>\n        <CreateAccount />\n      </div>\n\n    </>\n  );\n};\nexport default Frontpage;\n","import { Backdrop, CircularProgress } from '@mui/material';\nimport React from 'react';\n\nconst LoadingPage = () => (\n  <Backdrop open>\n    <CircularProgress size={100} />\n  </Backdrop>\n);\nexport default LoadingPage;\n","function convertUTCDateToLocalDate(date) {\n  const newDate = new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\n\n  const offset = date.getTimezoneOffset() / 60;\n  const hours = date.getHours();\n\n  newDate.setHours(hours - offset);\n\n  return newDate;\n}\nexport default convertUTCDateToLocalDate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableCell, TableRow } from '@mui/material';\nimport convertUTCDateToLocalDate from '../../utils/dateAndTine';\n\nconst SingleLogEntry = ({ log }) => {\n  const {\n    date, process, type, message,\n  } = log;\n  const paivays = convertUTCDateToLocalDate(new Date(+date));\n  return (\n    <TableRow>\n      <TableCell>{paivays.toLocaleString()}</TableCell>\n      <TableCell>{process}</TableCell>\n      <TableCell>{type}</TableCell>\n      <TableCell>{message}</TableCell>\n    </TableRow>\n  );\n};\n\nSingleLogEntry.propTypes = {\n  log: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    process: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n};\nexport default SingleLogEntry;\n","/* eslint-disable react/no-array-index-key */\nimport { useQuery } from '@apollo/client';\nimport {\n  Container, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography,\n} from '@mui/material';\nimport React, { useState, useEffect } from 'react';\nimport { GET_LOGS } from '../../graphql/mutations';\nimport LoadingPage from '../../components/LoadingPage';\nimport SingleLogEntry from './SingleLogEntry';\n\nconst Logs = () => {\n  const logsData = useQuery(GET_LOGS);\n  const [logit, setLogit] = useState(null);\n\n  useEffect(() => {\n    if (logsData.data && !logsData.loading) {\n      setLogit(logsData.data.getLogs);\n    }\n  }, [logsData]);\n\n  if (!logit) return <LoadingPage />;\n  return (\n    <Container>\n      <Typography variant=\"h3\">Captain&apos;s log</Typography>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Päivä</TableCell>\n              <TableCell>Prosessi</TableCell>\n              <TableCell>Tyyppi</TableCell>\n              <TableCell>Viesti</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {logit.map((l, i) => <SingleLogEntry key={l.date + i} log={l} />)}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Container>\n  );\n};\nexport default Logs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLoggedIn } from './LoggedUserProvider';\n\nconst HideIfNotLogged = ({ children, rooli }) => {\n  const { me: loggedIn } = useLoggedIn();\n  if (!loggedIn || (rooli !== '' && loggedIn.rooli !== rooli)) return (<></>);\n\n  return (\n    <>\n      {children}\n    </>\n  );\n};\nHideIfNotLogged.defaultProps = {\n  rooli: '',\n};\nHideIfNotLogged.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.object),\n    PropTypes.shape(),\n  ]).isRequired,\n  rooli: PropTypes.string,\n};\n\nexport default HideIfNotLogged;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport HideIfNotLogged from './HideIfNotLogged';\n\nconst NaviLinkit = ({ Wrap }) => (\n  <>\n    <AppBarLink to=\"/\" text=\"Etusivu\" Wrap={Wrap} />\n    <AppBarLink to=\"/competitions\" Wrap={Wrap} text=\"Kisat\" />\n    <HideIfNotLogged>\n      <AppBarLink to=\"/stats\" Wrap={Wrap} text=\"Stats\" />\n      <AppBarLink to=\"/settings\" Wrap={Wrap} text=\"Settings\" />\n      <AppBarLink to=\"/upload\" Wrap={Wrap} text=\"Upload\" />\n      <AppBarLink to=\"/logs\" Wrap={Wrap} text=\"Logs\" />\n    </HideIfNotLogged>\n    <HideIfNotLogged rooli=\"admin\">\n      <AppBarLink to=\"/admin\" Wrap={Wrap} text=\"Admin\" />\n    </HideIfNotLogged>\n  </>\n);\n\nconst AppBarLink = ({ to, text, Wrap }) => {\n  if (!Wrap) return <NavLink className=\"navilinkki\" to={to}>{text}</NavLink>;\n  return <Wrap><NavLink className=\"navilinkki\" to={to}>{text}</NavLink></Wrap>;\n};\n\nAppBarLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  Wrap: PropTypes.shape(),\n};\nAppBarLink.defaultProps = {\n  Wrap: null,\n};\nNaviLinkit.propTypes = {\n  Wrap: PropTypes.shape(),\n};\nNaviLinkit.defaultProps = {\n  Wrap: null,\n};\n\nexport default NaviLinkit;\n","import React, { useState } from 'react';\nimport {\n  AppBar as MuiAppBar, Toolbar, Typography, Box, IconButton, Menu, MenuItem,\n} from '@mui/material';\n\nimport MenuIcon from '@mui/icons-material/Menu';\nimport NaviLinkit from './NaviLinkit';\n\nconst AppBar = () => {\n  const [ankkuri, setAnkkuri] = useState(null);\n  const menuOpen = Boolean(ankkuri);\n\n  return (\n    <MuiAppBar position=\"sticky\" sx={{ minHeight: { md: '100px' } }} style={{ justifyContent: 'center' }}>\n      <Toolbar>\n        <Box sx={{ display: { xs: 'inline', md: 'none' } }}>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }} onClick={(e) => setAnkkuri(e.currentTarget)}>\n            <MenuIcon fontSize=\"large\" />\n          </IconButton>\n          <Menu\n            open={menuOpen}\n            anchorEl={ankkuri}\n            onClose={() => setAnkkuri(null)}\n          >\n            <NaviLinkit Wrap={MenuItem} />\n          </Menu>\n        </Box>\n        <Box style={{ flexGrow: 1 }}>\n          <Typography variant=\"h3\" component=\"span\">Risbeegomfkerho</Typography>\n        </Box>\n        <Box sx={{ display: { xs: 'none', md: 'inline' } }}>\n          <NaviLinkit />\n        </Box>\n      </Toolbar>\n    </MuiAppBar>\n  );\n};\n\nexport default AppBar;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card, CardContent, CardHeader, Collapse, IconButton, Table, TableBody,\n  TableCell, TableContainer, TableHead, TableRow, Typography,\n} from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { makeStyles } from '@mui/styles';\n\nconst colorMaker = (par, score) => {\n  const diff = score - par;\n  if (diff > 5) return 'red';\n  if (diff <= 0) return 'green';\n  return 'orange';\n};\nconst addPlus = (number) => {\n  if (number >= 0) return `+${number}`;\n  return number;\n};\nconst useStyles = makeStyles({\n  latest: {\n    color: ({ par, latest }) => colorMaker(par, latest),\n  },\n  best: {\n    color: ({ par, best }) => colorMaker(par, best),\n  },\n  avg: {\n    color: ({ par, avg }) => colorMaker(par, avg),\n  },\n});\n\nconst SimpleCourseStats = ({ data }) => {\n  const tyylit = useStyles({\n    par: data.par, latest: data.latest, best: data.min, avg: data.avg,\n  });\n  const [showMore, setShowMore] = useState(false);\n\n  return (\n    <Card style={{ marginBottom: '15px' }}>\n      <CardHeader\n        title={data.rata}\n        subheader={data.layout}\n        action={\n          (\n            <IconButton onClick={() => setShowMore(!showMore)}>\n              <ExpandMoreIcon fontSize=\"large\" />\n            </IconButton>\n          )\n        }\n      />\n      <CardContent>\n        <TableContainer>\n          <Table className=\"stats-table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Radan par</TableCell>\n                <TableCell>Pelattuja pelejä</TableCell>\n                <TableCell>KA</TableCell>\n                <TableCell>Paras</TableCell>\n                <TableCell>HC</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell>{data.par}</TableCell>\n                <TableCell>{data.games}</TableCell>\n                <TableCell className={tyylit.avg}>\n                  {\n                    addPlus(Math.round((data.avg - data.par) * 10) / 10)\n                  }\n                </TableCell>\n                <TableCell className={tyylit.best}>\n                  {addPlus(data.min - data.par)}\n                </TableCell>\n                <TableCell>\n                  {data.hc}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <Collapse in={showMore} mountOnEnter={false}>\n          <Typography variant=\"h5\">10 viimeisintä kierrosta</Typography>\n          {data.tenLatestRounds.map((r, i) => {\n            const key = `${data.rata}${data.layout}${i}`;\n            return (<span className=\"largeFont\" key={key} style={{ marginRight: '5%' }}>{r - data.par}</span>);\n          })}\n        </Collapse>\n      </CardContent>\n    </Card>\n  );\n};\nSimpleCourseStats.propTypes = {\n  data: PropTypes.shape().isRequired,\n};\n\nexport default SimpleCourseStats;\n","import React, { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport {\n  Divider,\n  Grid,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport LoadingPage from '../../components/LoadingPage';\nimport { GET_SIMPLE_COURSE_STATS } from '../../graphql/mutations';\nimport SimpleCourseStats from './SimpleCourseStats';\n\nconst Stats = () => {\n  const rataData = useQuery(GET_SIMPLE_COURSE_STATS);\n  const [filter, setFilter] = useState('');\n\n  if (rataData.loading) {\n    return <LoadingPage />;\n  }\n  if (!rataData.data) {\n    return (\n      <div className=\"div-error\">\n        Ei dataa, olethan kirjautunut?\n      </div>\n    );\n  }\n  return (\n    <div className=\"wideContainer wideContainerTop wideContainerSmallPadding\">\n      <Typography variant=\"h2\">Ratadataa</Typography>\n      {(rataData.data.getCourseStats.length > 0) ? <p>&nbsp;</p>\n        : (\n          <Typography paragraph>\n            Ei näytettävää dataa!? Tarkista, että olet lisännyt&nbsp;\n            <Link to=\"/settings/#alias\">aliaksia</Link>\n          </Typography>\n        )}\n      <Grid container spacing={5} alignItems=\"center\">\n        <Grid item>Suodata</Grid>\n        <Grid item>\n          <TextField label=\"Radan nimi\" value={filter} onChange={(e) => setFilter(e.target.value)} />\n        </Grid>\n      </Grid>\n      <Divider />\n      {rataData.data.getCourseStats\n        .filter((c) => c.rata.includes(filter))\n        .map((s) => (\n          <SimpleCourseStats key={s.rata + s.layout} data={s} />\n        ))}\n    </div>\n  );\n};\n\nexport default Stats;\n","import React from 'react';\nimport {\n  Button, Container, Typography,\n} from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { useSnackbar } from 'notistack';\nimport { UPLOAD_CSV } from '../graphql/mutations';\n\nconst UploadCsv = () => {\n  const [uploadFile] = useMutation(UPLOAD_CSV);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleUpload = (e) => {\n    e.preventDefault();\n    uploadFile({ variables: { file: e.target.tiedosto.files[0] } })\n      .then(() => {\n        enqueueSnackbar('Tiedosto lähetetty!', { variant: 'info' });\n      }).catch(() => {\n        enqueueSnackbar('Jokin meni vikaan :(', { variant: 'error' });\n      });\n    e.target.tiedosto.value = null;\n  };\n\n  return (\n    <Container>\n      <Typography variant=\"h2\">CSV-tiedoston lähetys</Typography>\n      <Typography paragraph>\n        Valitse UDiscistä saatava csv-tiedosto ja paina lähetä-nappia\n      </Typography>\n      <Typography paragraph>\n        Kun tiedosto on lähetetty, parsii palvelin sitä kasaan ja tunkee sen sittne tietokantaan.\n        Etenemistä voi seurata&nbsp;\n        <Link to=\"/logs\">kapteenin lokista</Link>\n        .\n      </Typography>\n      <form encType=\"multipart/form-data\" onSubmit={handleUpload}>\n        <input\n          type=\"file\"\n          name=\"tiedosto\"\n          id=\"raised-button-file\"\n          accept=\".csv\"\n          style={{ fontSize: '1.2rem' }}\n        />\n        <Typography>\n          <Button variant=\"contained\" type=\"submit\">Lähetä nappi</Button>\n        </Typography>\n      </form>\n    </Container>\n  );\n};\nexport default UploadCsv;\n","/*\n    Hookki käyttäjän aliaksien lisäämiseen ja poistamiseen\n*/\nimport { useMutation, useQuery } from '@apollo/client';\nimport { useState, useEffect } from 'react';\nimport { GET_ALIASES, ADD_ALIAS, DELETE_ALIAS } from '../graphql/mutations';\n\nconst useAliases = (userId) => {\n  const [aliakset, setAliakset] = useState([]);\n\n  const [addAliasMutation] = useMutation(ADD_ALIAS, {\n    refetchQueries: [GET_ALIASES, { variables: { userId } }],\n  });\n\n  const [deleteAliasMutationb] = useMutation(DELETE_ALIAS, {\n    refetchQueries: [GET_ALIASES, { variables: { userId } }],\n  });\n\n  const aliasQuery = useQuery(GET_ALIASES, { variables: { userId } });\n\n  useEffect(() => {\n    if (!aliasQuery.loading && aliasQuery && aliasQuery.data) {\n      setAliakset(aliasQuery.data.getAliases);\n    }\n  }, [aliasQuery.data]);\n\n  /* Aliaksen poistaminen ja lisäämisen metodit. Toisena argumenttina callback-funktio */\n  const addAlias = async (alias, callBack) => {\n    const res = await addAliasMutation({ variables: { alias, userId } });\n    callBack(res.data.addAlias);\n  };\n  const deleteAlias = async (aliasId, callBack) => {\n    const res = await deleteAliasMutationb({ variables: { aliasId } });\n    callBack(res.data.deleteAlias);\n  };\n\n  return { aliakset, addAlias, deleteAlias };\n};\nexport default useAliases;\n","import {\n  Button, Grid, IconButton, TextField,\n} from '@mui/material';\nimport { useSnackbar } from 'notistack';\nimport React from 'react';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport PropTypes from 'prop-types';\nimport useAliases from '../hooks/useAliases';\n\nconst Aliases = ({ userId }) => {\n  const { aliakset, addAlias, deleteAlias } = useAliases(userId);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleAddAlias = async (e) => {\n    e.preventDefault();\n    try {\n      await addAlias(e.target.alias.value, () => {\n        enqueueSnackbar('Alias lisätty!', { variant: 'success' });\n      });\n    } catch (error) {\n      enqueueSnackbar(`Aliasta ei lisätty (${error.message})`, { variant: 'error' });\n    }\n    e.target.alias.value = '';\n  };\n  const handleRemoveAlias = async (aliasId) => {\n    await deleteAlias(+aliasId, (res) => {\n      if (res === true) enqueueSnackbar('Alias poistettu!', { variant: 'success' });\n      else enqueueSnackbar('Aliasta ei poistettu :P', { variant: 'warning' });\n    });\n  };\n  if (!aliakset) {\n    return (\n      <div>\n        Loading...\n      </div>\n    );\n  }\n  return (\n    <div>\n      <h2>Aliaksesi</h2>\n      <Grid container alignItems=\"center\" width=\"600px\">\n        {aliakset.map((a) => <SingleAlias alias={a} key={a.id} del={handleRemoveAlias} />)}\n      </Grid>\n      <h3>Lisää alias</h3>\n      <form onSubmit={handleAddAlias}>\n        <TextField name=\"alias\" placeholder=\"Lisää alias\" size=\"small\" />\n        &nbsp;\n        <Button type=\"submit\" variant=\"contained\">Lisää</Button>\n      </form>\n    </div>\n  );\n};\n\nconst SingleAlias = ({ alias, del }) => (\n  <>\n    <Grid item xs={4}>{alias.alias}</Grid>\n    <Grid item xs={8}><IconButton onClick={() => del(alias.id)}><DeleteForeverIcon color=\"error\" /></IconButton></Grid>\n  </>\n);\nSingleAlias.propTypes = {\n  alias: PropTypes.shape().isRequired,\n  del: PropTypes.func.isRequired,\n};\nAliases.propTypes = {\n  userId: PropTypes.string,\n};\nAliases.defaultProps = {\n  userId: null,\n};\n\nexport default Aliases;\n","/* eslint-disable import/prefer-default-export */\nimport { gql } from '@apollo/client';\n\nexport const GET_COMPETITIONS = gql`\nquery {\n  getCompetitions {\n    game\n    paivays\n    name\n    layout\n    playerName\n    total\n    hc\n    par\n  }\n}\n`;\nexport const GET_USERS = gql`\nquery {\n  getUsers (active: false) {\n    id\n    name\n    email\n  }\n}\n`;\nexport const GET_SETUP = gql`\nquery {\n  getSetup {\n    ignoreHcBefore\n    ignoreMatchBefore\n    minPlayersForHc\n    minPlayersForMatch\n  }\n}\n`;\nexport const GET_USER = gql`\nquery ($id: Int, $name: String) {\n  getUser(id: $id, name: $name) {\n    id\n    name\n    email\n    rooli\n  }\n}\n`;\n","import { useMutation, useQuery } from '@apollo/client';\nimport { useEffect, useState } from 'react';\nimport { SAVE_SETUP } from '../graphql/mutations';\nimport { GET_SETUP } from '../graphql/queries';\n\nconst useSetup = () => {\n  const [setup, setSetup] = useState({});\n  const setupQuery = useQuery(GET_SETUP);\n  const [saveSetupMutation] = useMutation(SAVE_SETUP);\n\n  useEffect(() => {\n    if (setupQuery && !setupQuery.loading) {\n      setSetup(setupQuery.data.getSetup);\n    }\n  }, [setupQuery]);\n  const saveSetup = () => saveSetupMutation({ variables: setup });\n\n  return { setup, setSetup, saveSetup };\n};\nexport default useSetup;\n","import {\n  Button, Grid, TextField, Typography,\n} from '@mui/material';\nimport React from 'react';\nimport { useSnackbar } from 'notistack';\nimport useSetup from '../../hooks/useSetup';\n\nconst AdminSettings = () => {\n  const { setup, setSetup, saveSetup } = useSetup();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    let { value } = e.target;\n    if (typeof setup[e.target.name] === 'number') value = +value;\n    setSetup({ ...setup, [e.target.name]: value });\n  };\n  const handleSave = () => {\n    saveSetup().then(() => {\n      enqueueSnackbar('Asetukset tallennettiin onnistuneesti', { variant: 'success' });\n    }).catch(() => {\n      enqueueSnackbar('Virhe asetuksia tallennettaessa', { variant: 'error' });\n    });\n  };\n  return (\n    <>\n      <Typography variant=\"h4\">Kisa-asetukset</Typography>\n      <Grid container spacing={2}>\n        {Object.keys(setup).map((k) => {\n          if (k.startsWith('__')) return '';\n          return (\n            <Grid item xs={12} md={6} key={k}>\n              <TextField\n                name={k}\n                value={setup[k]}\n                label={k}\n                onChange={handleChange}\n                style={{ width: '80%' }}\n              />\n            </Grid>\n          );\n        })}\n        <Grid item xs={12}>\n          <Button type=\"submit\" onClick={handleSave}>Tallenna</Button>\n        </Grid>\n      </Grid>\n\n    </>\n  );\n};\nexport default AdminSettings;\n","import {\n  Button,\n  Container, Divider, Grid, TextField, Typography,\n} from '@mui/material';\nimport React from 'react';\nimport { useSnackbar } from 'notistack';\nimport useMe from '../../hooks/useMe';\nimport Aliases from '../../components/Aliases';\nimport HideIfNotLogged from '../../components/HideIfNotLogged';\nimport AdminSetup from './AdminSettings';\nimport LoadingPage from '../../components/LoadingPage';\n\nconst Settings = () => {\n  const { me, update } = useMe(true);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleEmailChange = (e) => {\n    e.preventDefault();\n    update({ email: e.target.email.value }).then(() => {\n      enqueueSnackbar('Sähköposti vaihdettu!', { variant: 'success' });\n    }).catch((err) => {\n      enqueueSnackbar(`Virhe sähköpostia vaihtaessa! (${err})`, { variant: 'error' });\n    });\n    e.target.email.value = '';\n  };\n  const handlePassWordChange = (e) => {\n    e.preventDefault();\n    const { salasana1, salasana2 } = e.target;\n    if (salasana1.value !== salasana2.value) {\n      enqueueSnackbar('Salasanat eivät täsmää!', { variant: 'error' });\n    } else {\n      update({ password: salasana1.value }).then(() => {\n        enqueueSnackbar('Salasana vaihdettu', { variant: 'info' });\n      }).catch(() => {\n        enqueueSnackbar('Virhe salasanaa vaihtaessa!', { variant: 'error' });\n      });\n    }\n    salasana1.value = '';\n    salasana2.value = '';\n  };\n  if (!me) {\n    return <LoadingPage />;\n  }\n  return (\n    <Container>\n      <Typography variant=\"h3\" gutterBottom>Asetukset</Typography>\n      <Grid container spacing={2} justifyContent=\"flex-start\" alignItems=\"center\" sx={{ width: { xs: '100%', md: '50%' } }}>\n        <Grid item xs={6}>Tunnus</Grid>\n        <Grid item xs={6}>{me.name}</Grid>\n        <Grid item xs={6}>Sähköposti</Grid>\n        <Grid item xs={6}>{me.email || 'Ei asetettu'}</Grid>\n      </Grid>\n      <Divider />\n      <Typography variant=\"h4\" gutterBottom>Vaihda email</Typography>\n      <form onSubmit={handleEmailChange}>\n        <TextField name=\"email\" label=\"Uusi sähköpostiosoite\" />\n        &nbsp;\n        <Button variant=\"contained\" type=\"submit\">Vaihda</Button>\n      </form>\n      <Divider />\n      <form onSubmit={handlePassWordChange}>\n        <Typography variant=\"h4\" gutterBottom>Vaihda salasana</Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField name=\"salasana1\" type=\"password\" label=\"Uusi salasana\" />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField name=\"salasana2\" type=\"password\" label=\"Vahvista salasana\" />\n          </Grid>\n          <Grid item xs={12}>\n            <Button type=\"submit\" variant=\"contained\">Vaihda</Button>\n          </Grid>\n        </Grid>\n      </form>\n      <Divider />\n      <Typography variant=\"h4\" gutterBottom>Aliakset</Typography>\n      <Typography paragraph>\n        Aliakset yhdistävät csv-tiedostossa olevat pelaajat tunnuksiin.\n      </Typography>\n      <Aliases />\n      <Divider />\n      <HideIfNotLogged rooli=\"admin\">\n        <AdminSetup />\n      </HideIfNotLogged>\n    </Container>\n  );\n};\n\nexport default Settings;\n","import { useQuery } from '@apollo/client';\nimport { useState, useEffect } from 'react';\nimport { GET_COMPETITIONS } from '../graphql/queries';\nimport calculateRanks from '../utils/competitionStuff';\n\nconst groupCompetitionsData = (data) => data.reduce((p, c) => {\n  let obj = p.find((x) => x.gameId === c.game);\n  if (!obj) {\n    obj = {\n      gameId: c.game,\n      date: new Date(+c.paivays).toLocaleString(),\n      course: {\n        name: c.name,\n        layout: c.layout,\n        par: c.par,\n      },\n      players: [],\n    };\n    p.push(obj);\n  }\n  obj.players.push({\n    name: c.playerName,\n    total: c.total,\n    plusminus: c.total - c.par,\n    hc: c.hc,\n    hcTotal: c.total - c.hc,\n    hcPlusminus: c.total - c.hc - c.par,\n  });\n  return p;\n}, []);\n\nconst useGetCompetitions = () => {\n  const compQuery = useQuery(GET_COMPETITIONS);\n  const [competitions, setCompetitions] = useState(null);\n  useEffect(() => {\n    if (compQuery && !compQuery.loading) {\n      let data = compQuery.data.getCompetitions;\n      data = groupCompetitionsData(data);\n      data = data.map((c) => calculateRanks(c));\n      setCompetitions(data);\n    }\n  }, [compQuery]);\n  return competitions;\n};\nexport default useGetCompetitions;\n","export default function calculateRanks(comp) {\n  const { players } = comp;\n  players.sort((a, b) => a.hcTotal - b.hcTotal);\n  let prevRank = 1;\n  const ret = players.map((c, i) => {\n    if (i === 0) return { ...c, rank: 1, points: 5 };\n    if (c.hcTotal > players[i - 1].hcTotal) prevRank += 1;\n    return {\n      ...c,\n      rank: prevRank,\n      points: (prevRank <= 5) ? (6 - prevRank) : 0,\n    };\n  });\n  return { ...comp, players: ret };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card, CardContent, CardHeader, TableContainer,\n  Table, TableHead, TableCell, TableRow, TableBody,\n} from '@mui/material';\n\nconst SingleCompetition = ({ competition }) => {\n  const {\n    course, date, players, gameId,\n  } = competition;\n  return (\n    <Card style={{ marginBottom: '20px' }}>\n      <CardHeader\n        title={course.name}\n        subheader={`${date} @ ${course.layout}`}\n      />\n      <CardContent>\n        <TableContainer>\n          <Table className=\"kisataulu\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Rank</TableCell>\n                <TableCell>Nimi</TableCell>\n                <TableCell>Total</TableCell>\n                <TableCell>+/-</TableCell>\n                <TableCell>HC</TableCell>\n                <TableCell>HC +/-</TableCell>\n                <TableCell>HC total</TableCell>\n                <TableCell>Points</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {players.map((p) => (\n                <TableRow key={gameId + p.name}>\n                  <TableCell>{p.rank}</TableCell>\n                  <TableCell>{p.name}</TableCell>\n                  <TableCell>{p.total}</TableCell>\n                  <TableCell>{p.plusminus}</TableCell>\n                  <TableCell>{p.hc}</TableCell>\n                  <TableCell>{p.hcPlusminus}</TableCell>\n                  <TableCell>{p.hcTotal}</TableCell>\n                  <TableCell>{p.points}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </CardContent>\n    </Card>\n  );\n};\n\nSingleCompetition.propTypes = {\n  competition: PropTypes.shape().isRequired,\n};\n\nexport default SingleCompetition;\n","/* eslint-disable no-multi-assign */\r\n/* eslint-disable react/forbid-prop-types */\r\n/* eslint-disable arrow-body-style */\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Table, TableHead, TableBody, TableCell, TableRow,\r\n} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PointsList = ({ competitions }) => {\r\n  const [pisteTaulu, setPistetaulu] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const taulu = competitions.reduce((p, c) => {\r\n      const ret = p;\r\n      c.players.forEach((element) => {\r\n        ret[element.name] = ret[element.name] + element.points || element.points;\r\n      });\r\n      return ret;\r\n    }, []);\r\n    setPistetaulu(taulu);\r\n  }, []);\r\n  return (\r\n    <Table>\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell>Nimi</TableCell>\r\n          <TableCell>Pisteet</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {Object.keys(pisteTaulu)\r\n          .sort((a, b) => pisteTaulu[b] - pisteTaulu[a])\r\n          .map((key) => (\r\n            <TableRow>\r\n              <TableCell>{key}</TableCell>\r\n              <TableCell>{pisteTaulu[key]}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nPointsList.propTypes = {\r\n  competitions: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default PointsList;\r\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Collapse,\n  Container, Typography,\n} from '@mui/material';\nimport useGetCompetitions from '../../hooks/useGetCompetitions';\nimport SingleCompetition from './SingleCompetitions';\nimport LoadingPage from '../../components/LoadingPage';\nimport PointList from './PointsList';\n\nconst Competitions = () => {\n  const competitions = useGetCompetitions();\n  const [showPoints, setShowPoints] = useState(false);\n  if (!competitions) {\n    return <LoadingPage />;\n  }\n  if (competitions.length < 1) {\n    return (\n      <Typography paragraph>\n        Ei yhtään kilpailua? Erotkaa ryhmästä välittömästi!\n      </Typography>\n    );\n  }\n  return (\n    <Container>\n      <Typography variant=\"h2\">Kilpailut</Typography>\n      <Button onClick={() => setShowPoints((open) => !open)}>\n        {(showPoints) ? 'Piilota pisteet' : 'Näytä pisteet'}\n      </Button>\n      <Collapse in={showPoints}>\n        <PointList competitions={competitions} />\n      </Collapse>\n      {competitions.map((c) => <SingleCompetition competition={c} key={c.gameId} />)}\n    </Container>\n  );\n};\n\nexport default Competitions;\n","import { useMutation, useQuery } from '@apollo/client';\nimport { Button, CircularProgress, Grid } from '@mui/material';\nimport { useSnackbar } from 'notistack';\nimport React, { useEffect, useState } from 'react';\nimport { ACTIVATE_USER, DELETE_USER } from '../graphql/mutations';\nimport { GET_USERS } from '../graphql/queries';\n\nconst UnActivatedUsers = () => {\n  const [users, setUsers] = useState([]);\n  const data = useQuery(GET_USERS);\n  const [aktivoi] = useMutation(ACTIVATE_USER, { refetchQueries: [GET_USERS] });\n  const [poista] = useMutation(DELETE_USER, { refetchQueries: [GET_USERS] });\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    if (data?.data && !data.loading) {\n      setUsers(data.data.getUsers);\n    }\n  });\n  const handleActivateUser = async (userId) => {\n    try {\n      await aktivoi({ variables: { userId } });\n      enqueueSnackbar(`Tunnus ${userId} aktivoitu!`, { variant: 'success' });\n    } catch (e) {\n      enqueueSnackbar(`Tunnusta ${userId} ei aktivoitu (${e.message})`, { variant: 'error' });\n    }\n  };\n  const handleDeleteUser = async (userId) => {\n    try {\n      await poista({ variables: { userId } });\n      enqueueSnackbar(`Tunnus ${userId} poistettu!`, { variant: 'warning' });\n    } catch (e) {\n      enqueueSnackbar(`Virhe tunnuksen positamisessa: ${e}`, { variant: 'error' });\n    }\n  };\n  if (!data.data?.getUsers) return (<CircularProgress />);\n  if (data.error) {\n    return (\n      <>\n        Error:\n        {data.error.message}\n      </>\n    );\n  }\n  if (users.length === 0) return (<>Ei aktivoitavia tunnuksia</>);\n  return (\n    <Grid container sx={{ width: { md: '50%', xs: '100%' } }} alignItems=\"center\" spacing={3}>\n      {users.map((u) => (\n        <React.Fragment key={u.id}>\n          <Grid item xs={6}>{u.name}</Grid>\n          <Grid item xs={6}>\n            <Button onClick={() => handleActivateUser(u.id)}>Aktivoi</Button>\n            &nbsp;\n            <Button onClick={() => handleDeleteUser(u.id)}>Poista</Button>\n          </Grid>\n        </React.Fragment>\n      ))}\n    </Grid>\n  );\n};\nexport default UnActivatedUsers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, TextField, Button } from '@mui/material';\nimport { useMutation } from '@apollo/client';\nimport { UPDATE_USER } from '../../graphql/mutations';\nimport { GET_USER } from '../../graphql/queries';\n\nconst SimpleUser = ({ user }) => {\n  const [saveUser] = useMutation(UPDATE_USER, {\n    refetchQueries: [GET_USER, { variables: { userId: user.id } }],\n  });\n  const handleSaveUser = async (e) => {\n    e.preventDefault();\n    await saveUser({\n      variables: {\n        email: e.target.email.value,\n        rooli: e.target.rooli.value,\n        userId: user.id,\n      },\n    });\n  };\n  return (\n    <form onSubmit={handleSaveUser}>\n      <Grid container spacing={1} alignItems=\"center\">\n        <Grid item xs={6}>Id</Grid>\n        <Grid item xs={6}>{user.id}</Grid>\n        <Grid item xs={6}>Tunnus</Grid>\n        <Grid item xs={6}>{user.name}</Grid>\n        <Grid item xs={6}>Email</Grid>\n        <Grid item xs={6}><TextField name=\"email\" defaultValue={user.email} /></Grid>\n        <Grid item xs={6}>Rooli</Grid>\n        <Grid item xs={6}><TextField name=\"rooli\" defaultValue={user.rooli} /></Grid>\n        <Grid item xs={6}><Button type=\"submit\">Tallenna</Button></Grid>\n      </Grid>\n    </form>\n  );\n};\n\nSimpleUser.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    rooli: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n  }).isRequired,\n};\nexport default SimpleUser;\n","import React from 'react';\nimport {\n  Button, Divider, TextField, Typography,\n} from '@mui/material';\nimport { useLazyQuery } from '@apollo/client';\n\nimport UnActivatedUsers from '../../components/UnActivatedUsers';\nimport { GET_USER } from '../../graphql/queries';\nimport SimpleUser from './SimpleUser';\nimport Aliases from '../../components/Aliases';\n\nconst Admin = () => {\n  const [haeUser, { data }] = useLazyQuery(GET_USER);\n  const handleGetUser = (e) => {\n    e.preventDefault();\n    haeUser({ variables: { name: e.target.tunnus.value } });\n  };\n  console.log(data);\n  return (\n    <div className=\"wideContainer\">\n      <Typography variant=\"h1\">Admin</Typography>\n      <Typography paragraph>By your command</Typography>\n      <Typography variant=\"h3\">Aktivoi tunnuksia</Typography>\n      <UnActivatedUsers />\n      <Divider />\n      <Typography variant=\"h3\">Muokkaa tunnusta</Typography>\n      <form onSubmit={handleGetUser} style={{ marginBottom: '20px' }}>\n        <TextField name=\"tunnus\" label=\"Anna tunnus\" />\n        <Button type=\"submit\">Hae</Button>\n      </form>\n      {(data?.getUser && (\n        <>\n          <SimpleUser user={data.getUser} />\n          <Divider />\n          <Typography variant=\"h3\">\n            Käyttäjän&nbsp;\n            {data.getUser.name}\n            &nbsp;aliakset\n          </Typography>\n          <Aliases userId={data.getUser.id} />\n        </>\n      ))}\n    </div>\n  );\n};\nexport default Admin;\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n// import useMe from './hooks/useMe';\nimport Particles from 'react-tsparticles';\n\nimport Frontpage from './pages/Frontpage';\nimport ReadLogs from './pages/Logs/Logs';\nimport AppBar from './components/AppBar';\nimport LoggedUserProvider from './components/LoggedUserProvider';\nimport Stats from './pages/Stats/Stats';\nimport UploadCsv from './components/UploadCsv';\nimport Settings from './pages/Settings/Settings';\nimport Competitions from './pages/Competitions/Competitions';\nimport Admin from './pages/Admin';\n\nfunction App() {\n  return (\n    <LoggedUserProvider>\n      <AppBar />\n      <Routes>\n        <Route path=\"/\" element={<Frontpage />} />\n        <Route path=\"/competitions\" element={<Competitions />} />\n        <Route path=\"/stats\" element={<Stats />} />\n        <Route path=\"/upload\" element={<UploadCsv />} />\n        <Route path=\"/settings\" element={<Settings />} />\n        <Route path=\"/logs\" element={<ReadLogs />} />\n        <Route path=\"/admin\" element={<Admin />} />\n      </Routes>\n      <Particles\n        options={{\n          particles: {\n            color: {\n              value: '#5f5f5f',\n            },\n            size: {\n              random: true,\n              value: 3,\n            },\n            move: {\n              enable: true,\n            },\n            zIndex: 10000,\n          },\n          interactivity: {\n            events: {\n              onHover: {\n                enable: true,\n                mode: 'repulse',\n              },\n            },\n          },\n        }}\n      />\n    </LoggedUserProvider>\n  );\n}\n\nexport default App;\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { createUploadLink } from 'apollo-upload-client';\nimport { setContext } from '@apollo/client/link/context';\n\nconst authLink = setContext((_, { headers }) => {\n  const token = window.sessionStorage.getItem('suklaaJuna');\n  return {\n    headers: {\n      ...headers,\n      authorization: token,\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(createUploadLink({\n    uri: (process.env.NODE_ENV === 'development')\n      ? 'http://localhost:8080/graphql'\n      : 'https://risbeegomfkerho-env.eba-bw33rqyj.us-east-2.elasticbeanstalk.com/graphql',\n  })),\n\n});\n\nexport default client;\n","import { createTheme } from '@mui/material/styles';\n\nconst Breakpoint = '@media screen and (min-width: 900px)';\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: 'Quicksand',\n  },\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#34568B',\n    },\n  },\n  components: {\n    MuiCard: {\n      styleOverrides: {\n        root: {\n          borderRadius: '15px',\n          paddingLeft: '10px',\n        },\n      },\n    },\n    MuiCardHeader: {\n      styleOverrides: {\n        title: {\n          [Breakpoint]: {\n            fontSize: '1.7vw',\n            margin: '0px',\n          },\n        },\n        subheader: {\n          margin: '0px',\n        },\n      },\n    },\n    MuiGrid: {\n      styleOverrides: {\n        root: {\n          [Breakpoint]: {\n            fontSize: '1.2rem',\n          },\n        },\n      },\n    },\n    MuiTextField: {\n      styleOverrides: {\n        root: {\n          width: '300px',\n          fontSize: 'large',\n          // backgroundColor: 'black',\n        },\n      },\n      defaultProps: {\n        color: 'info',\n      },\n    },\n    MuiTypography: {\n      styleOverrides: {\n        root: {\n          margin: '10px 0px',\n        },\n        paragraph: {\n          margin: '4rem 0px',\n          fontSize: '1.2em',\n          [Breakpoint]: {\n            fontSize: '1.2vw',\n          },\n        },\n        h1: {\n          fontSize: '2.5rem',\n          [Breakpoint]: {\n            fontSize: '4vw',\n          },\n        },\n        h2: {\n          fontSize: '2.3rem',\n          [Breakpoint]: {\n            fontSize: '3vw',\n          },\n        },\n        h3: {\n          fontSize: '1.6rem',\n          [Breakpoint]: {\n            fontSize: '2vw',\n          },\n        },\n      },\n    },\n    MuiButton: {\n      defaultProps: {\n        variant: 'contained',\n      },\n    },\n    MuiDivider: {\n      styleOverrides: {\n        root: {\n          margin: '20px 0px',\n        },\n      },\n    },\n    MuiTableCell: {\n      styleOverrides: {\n        root: {\n          fontSize: '.6em',\n          [Breakpoint]: {\n            fontSize: '1.2em',\n          },\n        },\n      },\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from '@apollo/client';\nimport './index.css';\nimport { SnackbarProvider } from 'notistack';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from '@mui/material';\nimport App from './App';\nimport client from './utils/apolloClient';\nimport theme from './utils/theme';\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <SnackbarProvider maxSnack={5}>\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </ThemeProvider>\n    </SnackbarProvider>\n  </ApolloProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}