{"version":3,"sources":["graphql/mutations.js","hooks/useMe.js","components/LoggedUserProvider.jsx","components/CreateAccount.jsx","components/LoginForm.jsx","components/LogoutButton.jsx","pages/Frontpage/LoggedFrontPage.jsx","pages/Frontpage/index.jsx","components/LoadingPage.jsx","utils/dateAndTine.js","pages/Logs/SingleLogEntry.jsx","pages/Logs/Logs.jsx","components/HideIfNotLogged.jsx","components/NaviLinkit.jsx","components/AppBar.jsx","pages/Stats/SimpleCourseStats.jsx","pages/Stats/Stats.jsx","components/UploadCsv.jsx","hooks/useAliases.js","components/Aliases.jsx","graphql/queries.js","hooks/useSetup.js","components/UnActivatedUsers.jsx","pages/Settings/AdminSettings.jsx","pages/Settings/Settings.jsx","hooks/useGetCompetitions.js","utils/competitionStuff.js","pages/Competitions/SingleCompetitions.jsx","pages/Competitions/Competitions.jsx","App.jsx","utils/apolloClient.js","utils/theme.js","index.jsx"],"names":["UPDATE_USER","gql","ACTIVATE_USER","SAVE_SETUP","UPLOAD_CSV","CREATE_USER","LOGIN","ADD_ALIAS","DELETE_ALIAS","GET_LOGS","GET_ME","GET_SIMPLE_COURSE_STATS","GET_ALIASES","useMe","fetchFromDatabase","undefined","useState","me","setMe","useQuery","variables","loading","data","useMutation","refetchQueries","updateMe","useEffect","getMe","update","a","res","clear","UserContext","createContext","useLoggedIn","useContext","LoggedUserProvider","children","Provider","value","CreateAccount","createUser","createUserData","enqueueSnackbar","useSnackbar","tunnus","password","password2","email","valid","tunnukset","setTunnukset","handleFieldChange","e","newTunnus","target","name","handleCreation","preventDefault","variant","Backdrop","open","CircularProgress","addUser","id","Typography","paragraph","error","className","message","onSubmit","Grid","container","spacing","alignItems","columns","item","md","xs","TextField","style","minWidth","required","onChange","type","placeholder","Button","size","disabled","LoginForm","loginUser","client","useApolloClient","handleLogin","window","scrollTo","sessionStorage","setItem","login","include","margin","LoadingButton","LogoutButton","logged","handleLogout","clearStore","resetStore","onClick","LoggedFrontPage","loggedMe","to","Frontpage","strings","typeSpeed","backSpeed","backDelay","onComplete","ref","cursor","remove","href","LoadingPage","convertUTCDateToLocalDate","date","newDate","Date","getTime","getTimezoneOffset","offset","hours","getHours","setHours","SingleLogEntry","log","process","paivays","TableRow","TableCell","toLocaleString","Logs","logsData","logit","setLogit","getLogs","Container","TableContainer","Table","TableHead","TableBody","map","l","i","HideIfNotLogged","rooli","loggedIn","defaultProps","propTypes","PropTypes","oneOfType","arrayOf","object","shape","isRequired","string","NaviLinkit","Wrap","text","AppBarLink","AppBar","ankkuri","setAnkkuri","menuOpen","Boolean","position","sx","minHeight","justifyContent","Toolbar","Box","display","IconButton","edge","color","mr","currentTarget","fontSize","Menu","anchorEl","onClose","MenuItem","flexGrow","component","colorMaker","par","score","diff","addPlus","number","useStyles","makeStyles","latest","best","avg","SimpleCourseStats","tyylit","min","showMore","setShowMore","Card","marginBottom","CardHeader","title","rata","subheader","layout","action","CardContent","games","Math","round","hc","Collapse","in","mountOnEnter","tenLatestRounds","r","key","marginRight","Stats","rataData","filter","setFilter","getCourseStats","length","label","Divider","c","includes","s","UploadCsv","uploadFile","encType","file","tiedosto","files","then","catch","accept","useAliases","aliakset","setAliakset","addAliasMutation","deleteAliasMutationb","aliasQuery","getAliases","addAlias","alias","callBack","deleteAlias","aliasId","SingleAlias","del","Aliases","handleAddAlias","handleRemoveAlias","width","GET_COMPETITIONS","GET_USERS","GET_SETUP","useSetup","setup","setSetup","setupQuery","saveSetupMutation","getSetup","saveSetup","UnActivatedUsers","users","setUsers","aktivoi","getUsers","handleActivateUser","userId","u","AdminSettings","handleChange","Object","keys","k","startsWith","Settings","gutterBottom","err","salasana1","salasana2","useGetCompetitions","compQuery","competitions","setCompetitions","getCompetitions","reduce","p","obj","find","x","gameId","game","course","players","push","playerName","total","plusminus","hcTotal","hcPlusminus","groupCompetitionsData","comp","sort","b","prevRank","ret","rank","points","calculateRanks","SingleCompetition","competition","Competitions","App","path","element","options","particles","random","move","enable","zIndex","interactivity","events","onHover","mode","authLink","setContext","_","headers","token","getItem","authorization","ApolloClient","cache","InMemoryCache","link","concat","createUploadLink","uri","credentials","Breakpoint","theme","createTheme","typography","fontFamily","palette","primary","main","components","MuiCard","styleOverrides","root","borderRadius","paddingLeft","MuiCardHeader","MuiGrid","MuiTextField","MuiTypography","h1","h2","h3","MuiButton","MuiDivider","MuiTableCell","ReactDOM","render","ApolloProvider","maxSnack","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.ad0cf4e9.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const UPDATE_USER = gql`\n  mutation($email: String, $password: String) {\n    updateUser(email: $email, password: $password)\n  }\n`;\nexport const ACTIVATE_USER = gql`\n  mutation($userId: ID!) {\n    activateUser(userId: $userId)\n  }\n`;\nexport const SAVE_SETUP = gql`\n  mutation ($minPlayersForMatch: Int, $minPlayersForHc: Int, $ignoreHcBefore: Date, $ignoreMatchBefore: Date) {\n    setSetup(\n      minPlayersForMatch: $minPlayersForMatch,\n      minPlayersForHc: $minPlayersForHc,\n      ignoreHcBefore: $ignoreHcBefore,\n      ignoreMatchBefore: $ignoreMatchBefore\n    )\n  }\n`;\n\nexport const UPLOAD_CSV = gql`\n  mutation($file: Upload!) {\n    uploadCsvFile(file: $file) {\n      filename\n      mimetype\n      encoding\n    }\n  }\n`;\n\nexport const CREATE_USER = gql`\n  mutation($name: String!, $password: String!, $email: String) {\n    addUser(name: $name, password: $password, email: $email) {\n      id\n    }\n  }\n`;\n\nexport const LOGIN = gql`\nmutation($name: String!, $password: String!) {\n  login(name: $name, password: $password)\n  \n}\n`;\nexport const ADD_ALIAS = gql`\nmutation ($alias: String!) {\n  addAlias(alias: $alias)\n}\n`;\nexport const DELETE_ALIAS = gql`\nmutation ($aliasId: Int!) {\n  deleteAlias(aliasId: $aliasId)\n}\n`;\nexport const GET_LOGS = gql`\n  query {\n    getLogs {\n      date\n      process\n      type\n      message\n    }\n  }\n`;\n\nexport const GET_ME = gql`\nquery ($fetchFromDatabase: Boolean) {\n  getMe (fetchFromDatabase: $fetchFromDatabase) {\n    id\n    name\n    rooli\n    email\n  }\n}\n`;\n\nexport const GET_SIMPLE_COURSE_STATS = gql`\nquery {\n  getCourseStats {\n    rata\n    layout\n    par\n    min\n    max\n    avg\n    games\n    tenLatestRounds\n    hc\n  }\n}\n`;\nexport const GET_ALIASES = gql`\nquery {\n  getAliases {\n    id\n    alias\n  }\n}\n`;\n","import { useMutation, useQuery } from '@apollo/client';\nimport { useState, useEffect } from 'react';\nimport { GET_ME, UPDATE_USER } from '../graphql/mutations';\n\nconst useMe = (fetchFromDatabase = undefined) => {\n  const [me, setMe] = useState(null);\n  const { loading, data } = useQuery(GET_ME, { variables: { fetchFromDatabase } });\n  const [updateMe] = useMutation(UPDATE_USER, {\n    refetchQueries:\n      [GET_ME,\n        {\n          variables: { fetchFromDatabase },\n        },\n      ],\n  });\n\n  useEffect(() => {\n    if (!loading) {\n      if (data?.getMe) {\n        setMe(data.getMe);\n      } else {\n        setMe(undefined);\n      }\n    }\n  }, [loading, data]);\n  const update = async (variables) => {\n    const res = await updateMe({ variables });\n    return res;\n  };\n  const clear = () => {\n    setMe(null);\n  };\n\n  return { me, update, clear };\n};\n\nexport default useMe;\n","import React, { createContext, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport useMe from '../hooks/useMe';\n\nconst UserContext = createContext();\n\nexport const useLoggedIn = () => useContext(UserContext);\n\nconst LoggedUserProvider = ({ children }) => {\n  const me = useMe();\n  return (\n    <UserContext.Provider value={me}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nLoggedUserProvider.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default LoggedUserProvider;\n","import {\n  TextField, Typography, Button, Grid, Backdrop, CircularProgress,\n} from '@mui/material';\nimport { useMutation } from '@apollo/client';\nimport React, { useState } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { CREATE_USER } from '../graphql/mutations';\n\nfunction CreateAccount() {\n  const [createUser, createUserData] = useMutation(CREATE_USER);\n  const { enqueueSnackbar } = useSnackbar();\n  const [tunnukset, setTunnukset] = useState({\n    tunnus: '',\n    password: '',\n    password2: '',\n    email: '',\n    valid: false,\n  });\n\n  const handleFieldChange = (e) => {\n    const newTunnus = { ...tunnukset, [e.target.name]: e.target.value };\n    newTunnus.valid = (newTunnus.tunnus !== '' && newTunnus.password !== '' && newTunnus.password === newTunnus.password2);\n    setTunnukset(newTunnus);\n  };\n  const handleCreation = async (e) => {\n    e.preventDefault();\n    try {\n      await createUser({\n        variables: {\n          name: tunnukset.tunnus,\n          password: tunnukset.password,\n          email: tunnukset.email,\n        },\n      });\n      enqueueSnackbar('Tunnus luotiin onnistuneesti!', { variant: 'success' });\n    } catch (error) {\n      enqueueSnackbar('Virhe tunnuksen luomisessa!', { variant: 'error' });\n    }\n  };\n\n  if (createUserData.loading) {\n    return (\n      <Backdrop open>\n        <CircularProgress />\n      </Backdrop>\n    );\n  }\n  if (createUserData.data?.addUser.id) {\n    return (\n      <>\n        <Typography variant=\"h4\">Tunnus luotu</Typography>\n        <Typography paragraph>\n          Tunnus luotiin onnistuneesti! Voit kirjautua sillä sisään jahka se ensin aktivoidaan.\n        </Typography>\n      </>\n    );\n  }\n  return (\n    <>\n      {\n        (createUserData.error\n          && (\n            <div className=\"div-error\">\n              Virhe tunnuksen luomisessa! (\n              {createUserData.error.message}\n              )\n            </div>\n          )\n        )\n      }\n      <form onSubmit={handleCreation}>\n        <Grid container spacing={1} alignItems=\"center\" columns={5}>\n          <Grid item md={1} xs={3}>Tunnus:</Grid>\n          <Grid item md={4} xs={3}>\n            <TextField name=\"tunnus\" style={{ minWidth: '50%' }} required onChange={handleFieldChange} />\n          </Grid>\n          <Grid item md={1} xs={3}>Salasana:</Grid>\n          <Grid item md={4} xs={3}><TextField style={{ minWidth: '50%' }} name=\"password\" required type=\"password\" onChange={handleFieldChange} /></Grid>\n          <Grid item md={1} xs={3}>Vahvista salasana:</Grid>\n          <Grid item md={4} xs={3}><TextField style={{ minWidth: '50%' }} name=\"password2\" required type=\"password\" onChange={handleFieldChange} /></Grid>\n          <Grid item md={1} xs={3}>Email:</Grid>\n          <Grid item md={4} xs={3}><TextField style={{ minWidth: '50%' }} name=\"email\" placeholder=\"Iimeil\" onChange={handleFieldChange} /></Grid>\n          <Grid item md={5} xs={3}>\n            <Button size=\"large\" variant=\"contained\" disabled={!tunnukset.valid} type=\"submit\">\n              Luo tunnukset\n            </Button>\n          </Grid>\n        </Grid>\n\n      </form>\n    </>\n  );\n}\nexport default CreateAccount;\n","import React from 'react';\nimport { Grid, TextField } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { useSnackbar } from 'notistack';\nimport { useApolloClient, useMutation } from '@apollo/client';\nimport { GET_ME, LOGIN } from '../graphql/mutations';\n\nfunction LoginForm() {\n  const [loginUser, { loading }] = useMutation(LOGIN);\n  const { enqueueSnackbar } = useSnackbar();\n  const client = useApolloClient();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await loginUser(\n        {\n          variables: {\n            name: e.target.tunnus.value,\n            password: e.target.password.value,\n          },\n        },\n      );\n      window.scrollTo(0, 0);\n      window.sessionStorage.setItem('suklaaJuna', res.data.login);\n      await client.refetchQueries({\n        include: [GET_ME],\n      });\n    } catch (error) {\n      enqueueSnackbar('Väärä tunnus tai salasana!', { variant: 'error' });\n    } finally {\n      e.target.tunnus.value = '';\n      e.target.password.value = '';\n    }\n  };\n\n  return (\n    <div style={{ margin: '8px 0px' }}>\n      <form onSubmit={handleLogin}>\n        <Grid container columns={1} spacing={1}>\n          <Grid item xs={1}>\n            <TextField name=\"tunnus\" placeholder=\"Tunnus...\" />\n          </Grid>\n          <Grid item xs={1}>\n            <TextField name=\"password\" type=\"password\" variant=\"outlined\" placeholder=\"Salasana...\" />\n          </Grid>\n          <Grid item xs={1}>\n            <LoadingButton loading={loading} type=\"submit\" size=\"large\"> Kirjaudu</LoadingButton>\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n  );\n}\nexport default LoginForm;\n","import { Button } from '@mui/material';\nimport { useApolloClient } from '@apollo/client';\nimport React from 'react';\nimport { GET_ME } from '../graphql/mutations';\nimport { useLoggedIn } from './LoggedUserProvider';\n\nconst LogoutButton = () => {\n  const client = useApolloClient();\n  const logged = useLoggedIn();\n  const handleLogout = async () => {\n    await client.clearStore();\n    await client.resetStore();\n    await client.refetchQueries({ include: [GET_ME] });\n    window.sessionStorage.clear();\n    logged.clear();\n  };\n  return (\n    <Button onClick={handleLogout}>Logout</Button>\n  );\n};\n\nexport default LogoutButton;\n","import {\n  Typography,\n} from '@mui/material';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLoggedIn } from '../../components/LoggedUserProvider';\nimport LogoutButton from '../../components/LogoutButton';\n\nconst LoggedFrontPage = () => {\n  const loggedMe = useLoggedIn();\n\n  return (\n    <>\n      <div className=\"wideContainer wideContainerTop\">\n        <Typography variant=\"h2\">\n          Olet kirjautunut sisään\n        </Typography>\n        <Typography paragraph>\n          Olet kirjautunut sisään tunnuksella&nbsp;\n          <b>\n            {loggedMe?.me.name}\n          </b>\n        </Typography>\n        <Typography paragraph>\n          Jos haluat kirjautua ulos, voit erota välittömästi ryhmästä klikkaamalla&nbsp;\n          <LogoutButton />\n          &nbsp;-nappia\n        </Typography>\n      </div>\n      <div className=\"wideContainer splitContainer\">\n        <div className=\"darkContainer\">\n          <Typography variant=\"h2\">Aliakset</Typography>\n          <Typography paragraph>\n            Aliaskset yhdistävät Udiscin csv-tiedoston nimet käyttäjätunnuksiin. Aliaksia voi\n            lisätä&nbsp;\n            <Link to=\"/settings\">asetuksissa</Link>\n          </Typography>\n        </div>\n        <div>\n          &nbsp;\n        </div>\n      </div>\n      <div className=\"wideContainer splitContainer\">\n        <div>\n          &nbsp;\n        </div>\n        <div className=\"darkContainer\">\n          <Typography variant=\"h2\">CSV-tiedosto</Typography>\n          <Typography paragraph>\n            Udiscistä saatavan csv-tiedoston voi lähettää&nbsp;\n            <Link to=\"/upload\">Upload</Link>\n            &nbsp; -sivun kautta!\n          </Typography>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LoggedFrontPage;\n","import React from 'react';\nimport { Typography } from '@mui/material';\nimport Typed from 'react-typed';\n\nimport { useLoggedIn } from '../../components/LoggedUserProvider';\nimport CreateAccount from '../../components/CreateAccount';\nimport LoginForm from '../../components/LoginForm';\nimport LoggedFrontPage from './LoggedFrontPage';\n\nconst Frontpage = () => {\n  const loggedIn = useLoggedIn();\n  if (loggedIn.me) {\n    return (\n      <LoggedFrontPage />\n    );\n  }\n  return (\n    <>\n      <div className=\"wideContainer wideContainerTop\">\n        <Typography variant=\"h1\">\n          <Typed\n            strings={[\n              'fRisbeegolfkerh',\n              'Fisbeego',\n              'RFisbeegolf',\n              'Risbeegomfkerho',\n            ]}\n            typeSpeed={50}\n            backSpeed={40}\n            backDelay={10}\n            onComplete={(ref) => { ref.cursor.remove(); }}\n          />\n        </Typography>\n        <Typography paragraph>\n          Olet eksynyt Risbeegomfkerhon sivuille.\n        </Typography>\n        <Typography paragraph>\n          Omistatko jo tunnukset?&nbsp;\n          <a href=\"#login\">Kirjaudu sisään!</a>\n          Etkö omista tunnuksia?&nbsp;\n          <a href=\"#luoTunnus\">Luo tunnukset!</a>\n        </Typography>\n      </div>\n      <div className=\"wideContainer splitContainer\">\n        <div className=\"darkContainer\">\n          <Typography variant=\"h3\">Ei turvallinen!?</Typography>\n          <Typography paragraph>\n            Voit huoletta ottaa foliohatun pois päästä, sillä kaikki &quot;arkaluontoinen&quot; data\n            (salasanat, tilastot yms.) kulkevat https-yhteyden kautta.\n          </Typography>\n          Risbeegomfkerho on niin köyhä, ettei edes kunnolliseen\n          <Typography paragraph>\n            <a href=\"https://risbeegomfkerho-env.eba-bw33rqyj.us-east-2.elasticbeanstalk.com/\">\n              &nbsp;sertifikaattiin&nbsp;\n            </a>\n            ole varaa.\n          </Typography>\n        </div>\n        <div id=\"login\">\n          <Typography variant=\"h3\">Kirjaudu sisään</Typography>\n          <Typography paragraph>\n            Syötä tunnuksesi ja salasanasi alla oleviin kenttiin kirjautuaksesi sisään.\n          </Typography>\n          <LoginForm />\n        </div>\n      </div>\n      <div className=\"wideContainer\" id=\"luoTunnus\">\n        <Typography variant=\"h3\">Luo tunnuket</Typography>\n        <Typography paragraph>\n          Luo tunnukset täyttämällä alla oleva lomake. Sähköpostiosoite ei ole pakollinen.\n        </Typography>\n        <Typography paragraph>\n          Tunnukset eivät ole käytettävissä heti luomisen jälkeen, vaan jonkun täytyy\n          aktivoida ne ensin.\n        </Typography>\n        <CreateAccount />\n      </div>\n\n    </>\n  );\n};\nexport default Frontpage;\n","import { Backdrop, CircularProgress } from '@mui/material';\nimport React from 'react';\n\nconst LoadingPage = () => (\n  <Backdrop open>\n    <CircularProgress size={100} />\n  </Backdrop>\n);\nexport default LoadingPage;\n","function convertUTCDateToLocalDate(date) {\n  const newDate = new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\n\n  const offset = date.getTimezoneOffset() / 60;\n  const hours = date.getHours();\n\n  newDate.setHours(hours - offset);\n\n  return newDate;\n}\nexport default convertUTCDateToLocalDate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableCell, TableRow } from '@mui/material';\nimport convertUTCDateToLocalDate from '../../utils/dateAndTine';\n\nconst SingleLogEntry = ({ log }) => {\n  const {\n    date, process, type, message,\n  } = log;\n  const paivays = convertUTCDateToLocalDate(new Date(+date));\n  return (\n    <TableRow>\n      <TableCell>{paivays.toLocaleString()}</TableCell>\n      <TableCell>{process}</TableCell>\n      <TableCell>{type}</TableCell>\n      <TableCell>{message}</TableCell>\n    </TableRow>\n  );\n};\n\nSingleLogEntry.propTypes = {\n  log: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    process: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n};\nexport default SingleLogEntry;\n","/* eslint-disable react/no-array-index-key */\nimport { useQuery } from '@apollo/client';\nimport {\n  Container, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography,\n} from '@mui/material';\nimport React, { useState, useEffect } from 'react';\nimport { GET_LOGS } from '../../graphql/mutations';\nimport LoadingPage from '../../components/LoadingPage';\nimport SingleLogEntry from './SingleLogEntry';\n\nconst Logs = () => {\n  const logsData = useQuery(GET_LOGS);\n  const [logit, setLogit] = useState(null);\n\n  useEffect(() => {\n    if (logsData.data && !logsData.loading) {\n      setLogit(logsData.data.getLogs);\n    }\n  }, [logsData]);\n\n  if (!logit) return <LoadingPage />;\n  return (\n    <Container>\n      <Typography variant=\"h3\">Captain&apos;s log</Typography>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Päivä</TableCell>\n              <TableCell>Prosessi</TableCell>\n              <TableCell>Tyyppi</TableCell>\n              <TableCell>Viesti</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {logit.map((l, i) => <SingleLogEntry key={l.date + i} log={l} />)}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Container>\n  );\n};\nexport default Logs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLoggedIn } from './LoggedUserProvider';\n\nconst HideIfNotLogged = ({ children, rooli }) => {\n  const { me: loggedIn } = useLoggedIn();\n  if (!loggedIn || (rooli !== '' && loggedIn.rooli !== rooli)) return (<></>);\n\n  return (\n    <>\n      {children}\n    </>\n  );\n};\nHideIfNotLogged.defaultProps = {\n  rooli: '',\n};\nHideIfNotLogged.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.object),\n    PropTypes.shape(),\n  ]).isRequired,\n  rooli: PropTypes.string,\n};\n\nexport default HideIfNotLogged;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport HideIfNotLogged from './HideIfNotLogged';\n\nconst NaviLinkit = ({ Wrap }) => (\n  <>\n    <AppBarLink to=\"/\" text=\"Etusivu\" Wrap={Wrap} />\n    <AppBarLink to=\"/competitions\" Wrap={Wrap} text=\"Kisat\" />\n    <HideIfNotLogged>\n      <AppBarLink to=\"/stats\" Wrap={Wrap} text=\"Stats\" />\n      <AppBarLink to=\"/settings\" Wrap={Wrap} text=\"Settings\" />\n      <AppBarLink to=\"/upload\" Wrap={Wrap} text=\"Upload\" />\n      <AppBarLink to=\"/logs\" Wrap={Wrap} text=\"Logs\" />\n    </HideIfNotLogged>\n  </>\n);\n\nconst AppBarLink = ({ to, text, Wrap }) => {\n  if (!Wrap) return <NavLink className=\"navilinkki\" to={to}>{text}</NavLink>;\n  return <Wrap><NavLink className=\"navilinkki\" to={to}>{text}</NavLink></Wrap>;\n};\n\nAppBarLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  Wrap: PropTypes.shape(),\n};\nAppBarLink.defaultProps = {\n  Wrap: null,\n};\nNaviLinkit.propTypes = {\n  Wrap: PropTypes.shape(),\n};\nNaviLinkit.defaultProps = {\n  Wrap: null,\n};\n\nexport default NaviLinkit;\n","import React, { useState } from 'react';\nimport {\n  AppBar as MuiAppBar, Toolbar, Typography, Box, IconButton, Menu, MenuItem,\n} from '@mui/material';\n\nimport MenuIcon from '@mui/icons-material/Menu';\nimport NaviLinkit from './NaviLinkit';\n\nconst AppBar = () => {\n  const [ankkuri, setAnkkuri] = useState(null);\n  const menuOpen = Boolean(ankkuri);\n\n  return (\n    <MuiAppBar position=\"sticky\" sx={{ minHeight: { md: '100px' } }} style={{ justifyContent: 'center' }}>\n      <Toolbar>\n        <Box sx={{ display: { xs: 'inline', md: 'none' } }}>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }} onClick={(e) => setAnkkuri(e.currentTarget)}>\n            <MenuIcon fontSize=\"large\" />\n          </IconButton>\n          <Menu\n            open={menuOpen}\n            anchorEl={ankkuri}\n            onClose={() => setAnkkuri(null)}\n          >\n            <NaviLinkit Wrap={MenuItem} />\n          </Menu>\n        </Box>\n        <Box style={{ flexGrow: 1 }}>\n          <Typography variant=\"h3\" component=\"span\">Risbeegomfkerho</Typography>\n        </Box>\n        <Box sx={{ display: { xs: 'none', md: 'inline' } }}>\n          <NaviLinkit />\n        </Box>\n      </Toolbar>\n    </MuiAppBar>\n  );\n};\n\nexport default AppBar;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card, CardContent, CardHeader, Collapse, IconButton, Table, TableBody,\n  TableCell, TableContainer, TableHead, TableRow, Typography,\n} from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { makeStyles } from '@mui/styles';\n\nconst colorMaker = (par, score) => {\n  const diff = score - par;\n  if (diff > 5) return 'red';\n  if (diff <= 0) return 'green';\n  return 'orange';\n};\nconst addPlus = (number) => {\n  if (number >= 0) return `+${number}`;\n  return number;\n};\nconst useStyles = makeStyles({\n  latest: {\n    color: ({ par, latest }) => colorMaker(par, latest),\n  },\n  best: {\n    color: ({ par, best }) => colorMaker(par, best),\n  },\n  avg: {\n    color: ({ par, avg }) => colorMaker(par, avg),\n  },\n});\n\nconst SimpleCourseStats = ({ data }) => {\n  const tyylit = useStyles({\n    par: data.par, latest: data.latest, best: data.min, avg: data.avg,\n  });\n  const [showMore, setShowMore] = useState(false);\n\n  return (\n    <Card style={{ marginBottom: '15px' }}>\n      <CardHeader\n        title={data.rata}\n        subheader={data.layout}\n        action={\n          (\n            <IconButton onClick={() => setShowMore(!showMore)}>\n              <ExpandMoreIcon fontSize=\"large\" />\n            </IconButton>\n          )\n        }\n      />\n      <CardContent>\n        <TableContainer>\n          <Table className=\"stats-table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Radan par</TableCell>\n                <TableCell>Pelattuja pelejä</TableCell>\n                <TableCell>KA</TableCell>\n                <TableCell>Paras</TableCell>\n                <TableCell>HC</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell>{data.par}</TableCell>\n                <TableCell>{data.games}</TableCell>\n                <TableCell className={tyylit.avg}>\n                  {\n                    addPlus(Math.round((data.avg - data.par) * 10) / 10)\n                  }\n                </TableCell>\n                <TableCell className={tyylit.best}>\n                  {addPlus(data.min - data.par)}\n                </TableCell>\n                <TableCell>\n                  {data.hc}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <Collapse in={showMore} mountOnEnter={false}>\n          <Typography variant=\"h5\">10 viimeisintä kierrosta</Typography>\n          {data.tenLatestRounds.map((r, i) => {\n            const key = `${data.rata}${data.layout}${i}`;\n            return (<span className=\"largeFont\" key={key} style={{ marginRight: '5%' }}>{r - data.par}</span>);\n          })}\n        </Collapse>\n      </CardContent>\n    </Card>\n  );\n};\nSimpleCourseStats.propTypes = {\n  data: PropTypes.shape().isRequired,\n};\n\nexport default SimpleCourseStats;\n","import React, { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport {\n  Divider,\n  Grid,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport LoadingPage from '../../components/LoadingPage';\nimport { GET_SIMPLE_COURSE_STATS } from '../../graphql/mutations';\nimport SimpleCourseStats from './SimpleCourseStats';\n\nconst Stats = () => {\n  const rataData = useQuery(GET_SIMPLE_COURSE_STATS);\n  const [filter, setFilter] = useState('');\n\n  if (rataData.loading) {\n    return <LoadingPage />;\n  }\n  if (!rataData.data) {\n    return (\n      <div className=\"div-error\">\n        Ei dataa, olethan kirjautunut?\n      </div>\n    );\n  }\n  return (\n    <div className=\"wideContainer wideContainerTop wideContainerSmallPadding\">\n      <Typography variant=\"h2\">Ratadataa</Typography>\n      {(rataData.data.getCourseStats.length > 0) ? <p>&nbsp;</p>\n        : (\n          <Typography paragraph>\n            Ei näytettävää dataa!? Tarkista, että olet lisännyt&nbsp;\n            <Link to=\"/settings/#alias\">aliaksia</Link>\n          </Typography>\n        )}\n      <Grid container spacing={5} alignItems=\"center\">\n        <Grid item>Suodata</Grid>\n        <Grid item>\n          <TextField label=\"Radan nimi\" value={filter} onChange={(e) => setFilter(e.target.value)} />\n        </Grid>\n      </Grid>\n      <Divider />\n      {rataData.data.getCourseStats\n        .filter((c) => c.rata.includes(filter))\n        .map((s) => (\n          <SimpleCourseStats key={s.rata + s.layout} data={s} />\n        ))}\n    </div>\n  );\n};\n\nexport default Stats;\n","import React from 'react';\nimport {\n  Button, Container, Typography,\n} from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { useSnackbar } from 'notistack';\nimport { UPLOAD_CSV } from '../graphql/mutations';\n\nconst UploadCsv = () => {\n  const [uploadFile] = useMutation(UPLOAD_CSV);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleUpload = (e) => {\n    e.preventDefault();\n    uploadFile({ variables: { file: e.target.tiedosto.files[0] } })\n      .then(() => {\n        enqueueSnackbar('Tiedosto lähetetty!', { variant: 'info' });\n      }).catch(() => {\n        enqueueSnackbar('Jokin meni vikaan :(', { variant: 'error' });\n      });\n    e.target.tiedosto.value = null;\n  };\n\n  return (\n    <Container>\n      <Typography variant=\"h2\">CSV-tiedoston lähetys</Typography>\n      <Typography paragraph>\n        Valitse UDiscistä saatava csv-tiedosto ja paina lähetä-nappia\n      </Typography>\n      <Typography paragraph>\n        Kun tiedosto on lähetetty, parsii palvelin sitä kasaan ja tunkee sen sittne tietokantaan.\n        Etenemistä voi seurata&nbsp;\n        <Link to=\"/logs\">kapteenin lokista</Link>\n        .\n      </Typography>\n      <form encType=\"multipart/form-data\" onSubmit={handleUpload}>\n        <input\n          type=\"file\"\n          name=\"tiedosto\"\n          id=\"raised-button-file\"\n          accept=\".csv\"\n          style={{ fontSize: '1.2rem' }}\n        />\n        <Typography>\n          <Button variant=\"contained\" type=\"submit\">Lähetä nappi</Button>\n        </Typography>\n      </form>\n    </Container>\n  );\n};\nexport default UploadCsv;\n","import { useMutation, useQuery } from '@apollo/client';\nimport { useState, useEffect } from 'react';\nimport { GET_ALIASES, ADD_ALIAS, DELETE_ALIAS } from '../graphql/mutations';\n\nconst useAliases = () => {\n  const [aliakset, setAliakset] = useState([]);\n  const [addAliasMutation] = useMutation(ADD_ALIAS, { refetchQueries: [GET_ALIASES] });\n  const [deleteAliasMutationb] = useMutation(DELETE_ALIAS, { refetchQueries: [GET_ALIASES] });\n  const aliasQuery = useQuery(GET_ALIASES);\n\n  useEffect(() => {\n    if (!aliasQuery.loading && aliasQuery && aliasQuery.data) {\n      setAliakset(aliasQuery.data.getAliases);\n    }\n  }, [aliasQuery.data]);\n  const addAlias = async (alias, callBack) => {\n    const res = await addAliasMutation({ variables: { alias } });\n    callBack(res.data.addAlias);\n  };\n  const deleteAlias = async (aliasId, callBack) => {\n    const res = await deleteAliasMutationb({ variables: { aliasId } });\n    callBack(res.data.deleteAlias);\n  };\n\n  return { aliakset, addAlias, deleteAlias };\n};\nexport default useAliases;\n","import {\n  Button, Grid, IconButton, TextField,\n} from '@mui/material';\nimport { useSnackbar } from 'notistack';\nimport React from 'react';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport PropTypes from 'prop-types';\nimport useAliases from '../hooks/useAliases';\n\nconst Aliases = () => {\n  const { aliakset, addAlias, deleteAlias } = useAliases();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleAddAlias = async (e) => {\n    e.preventDefault();\n    try {\n      await addAlias(e.target.alias.value, () => {\n        enqueueSnackbar('Alias lisätty!', { variant: 'success' });\n      });\n    } catch (error) {\n      enqueueSnackbar(`Aliasta ei lisätty (${error.message})`, { variant: 'error' });\n    }\n    e.target.alias.value = '';\n  };\n  const handleRemoveAlias = async (aliasId) => {\n    await deleteAlias(+aliasId, (res) => {\n      if (res === true) enqueueSnackbar('Alias poistettu!', { variant: 'success' });\n      else enqueueSnackbar('Aliasta ei poistettu :P', { variant: 'warning' });\n    });\n  };\n  if (!aliakset) {\n    return (\n      <div>\n        Loading...\n      </div>\n    );\n  }\n  return (\n    <div>\n      <h2>Aliaksesi</h2>\n      <Grid container alignItems=\"center\" width=\"600px\">\n        {aliakset.map((a) => <SingleAlias alias={a} key={a.id} del={handleRemoveAlias} />)}\n      </Grid>\n      <h3>Lisää alias</h3>\n      <form onSubmit={handleAddAlias}>\n        <TextField name=\"alias\" placeholder=\"Lisää alias\" size=\"small\" />\n        &nbsp;\n        <Button type=\"submit\" variant=\"contained\">Lisää</Button>\n      </form>\n    </div>\n  );\n};\n\nconst SingleAlias = ({ alias, del }) => (\n  <>\n    <Grid item xs={4}>{alias.alias}</Grid>\n    <Grid item xs={8}><IconButton onClick={() => del(alias.id)}><DeleteForeverIcon color=\"error\" /></IconButton></Grid>\n  </>\n);\nSingleAlias.propTypes = {\n  alias: PropTypes.shape().isRequired,\n  del: PropTypes.func.isRequired,\n};\n\nexport default Aliases;\n","/* eslint-disable import/prefer-default-export */\nimport { gql } from '@apollo/client';\n\nexport const GET_COMPETITIONS = gql`\nquery {\n  getCompetitions {\n    game\n    paivays\n    name\n    layout\n    playerName\n    total\n    hc\n    par\n  }\n}\n`;\nexport const GET_USERS = gql`\nquery {\n  getUsers (active: false) {\n    id\n    name\n    email\n  }\n}\n`;\nexport const GET_SETUP = gql`\nquery {\n  getSetup {\n    ignoreHcBefore\n    ignoreMatchBefore\n    minPlayersForHc\n    minPlayersForMatch\n  }\n}\n`;\n","import { useMutation, useQuery } from '@apollo/client';\nimport { useEffect, useState } from 'react';\nimport { SAVE_SETUP } from '../graphql/mutations';\nimport { GET_SETUP } from '../graphql/queries';\n\nconst useSetup = () => {\n  const [setup, setSetup] = useState({});\n  const setupQuery = useQuery(GET_SETUP);\n  const [saveSetupMutation] = useMutation(SAVE_SETUP);\n\n  useEffect(() => {\n    if (setupQuery && !setupQuery.loading) {\n      setSetup(setupQuery.data.getSetup);\n    }\n  }, [setupQuery]);\n  const saveSetup = () => saveSetupMutation({ variables: setup });\n\n  return { setup, setSetup, saveSetup };\n};\nexport default useSetup;\n","import { useMutation, useQuery } from '@apollo/client';\nimport { Button, Grid } from '@mui/material';\nimport { useSnackbar } from 'notistack';\nimport React, { useEffect, useState } from 'react';\nimport { ACTIVATE_USER } from '../graphql/mutations';\nimport { GET_USERS } from '../graphql/queries';\n\nconst UnActivatedUsers = () => {\n  const [users, setUsers] = useState([]);\n  const data = useQuery(GET_USERS);\n  const [aktivoi] = useMutation(ACTIVATE_USER, { refetchQueries: [GET_USERS] });\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    if (data?.data && !data.loading) {\n      setUsers(data.data.getUsers);\n    }\n  });\n  const handleActivateUser = async (userId) => {\n    try {\n      await aktivoi({ variables: { userId } });\n      enqueueSnackbar(`Tunnus ${userId} aktivoitu!`, { variant: 'success' });\n    } catch (e) {\n      enqueueSnackbar(`Tunnusta ${userId} ei aktivoitu (${e.message})`, { variant: 'error' });\n    }\n  };\n  return users.map((u) => (\n    <Grid container key={u.id} sx={{ width: { md: '50%', xs: '100%' }, marginBottom: '10px' }}>\n      <Grid item xs={6}>{u.name}</Grid>\n      <Grid item xs={6}>\n        <Button onClick={() => handleActivateUser(u.id)}>Aktivoi</Button>\n      </Grid>\n    </Grid>\n  ));\n};\nexport default UnActivatedUsers;\n","import {\n  Button, Grid, TextField, Typography,\n} from '@mui/material';\nimport React from 'react';\nimport { useSnackbar } from 'notistack';\nimport useSetup from '../../hooks/useSetup';\nimport UnActivatedUsers from '../../components/UnActivatedUsers';\n\nconst AdminSettings = () => {\n  const { setup, setSetup, saveSetup } = useSetup();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    let { value } = e.target;\n    if (typeof setup[e.target.name] === 'number') value = +value;\n    setSetup({ ...setup, [e.target.name]: value });\n  };\n  const handleSave = () => {\n    saveSetup().then(() => {\n      enqueueSnackbar('Asetukset tallennettiin onnistuneesti', { variant: 'success' });\n    }).catch(() => {\n      enqueueSnackbar('Virhe asetuksia tallennettaessa', { variant: 'error' });\n    });\n  };\n  return (\n    <>\n      <Typography variant=\"h3\">Lisäasetukset</Typography>\n      <Typography variant=\"h4\">Ei-aktivoidut käyttäjät</Typography>\n      <UnActivatedUsers />\n      <Typography variant=\"h4\">Kisa-asetukset</Typography>\n      <Grid container spacing={2}>\n        {Object.keys(setup).map((k) => {\n          if (k.startsWith('__')) return '';\n          return (\n            <Grid item xs={12} md={6} key={k}>\n              <TextField\n                name={k}\n                value={setup[k]}\n                label={k}\n                onChange={handleChange}\n                style={{ width: '80%' }}\n              />\n            </Grid>\n          );\n        })}\n        <Grid item xs={12}>\n          <Button type=\"submit\" onClick={handleSave}>Tallenna</Button>\n        </Grid>\n      </Grid>\n\n    </>\n  );\n};\nexport default AdminSettings;\n","import {\n  Button,\n  Container, Divider, Grid, TextField, Typography,\n} from '@mui/material';\nimport React from 'react';\nimport { useSnackbar } from 'notistack';\nimport useMe from '../../hooks/useMe';\nimport Aliases from '../../components/Aliases';\nimport HideIfNotLogged from '../../components/HideIfNotLogged';\nimport AdminSetup from './AdminSettings';\nimport LoadingPage from '../../components/LoadingPage';\n\nconst Settings = () => {\n  const { me, update } = useMe(true);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleEmailChange = (e) => {\n    e.preventDefault();\n    update({ email: e.target.email.value }).then(() => {\n      enqueueSnackbar('Sähköposti vaihdettu!', { variant: 'success' });\n    }).catch((err) => {\n      enqueueSnackbar(`Virhe sähköpostia vaihtaessa! (${err})`, { variant: 'error' });\n    });\n    e.target.email.value = '';\n  };\n  const handlePassWordChange = (e) => {\n    e.preventDefault();\n    const { salasana1, salasana2 } = e.target;\n    if (salasana1.value !== salasana2.value) {\n      enqueueSnackbar('Salasanat eivät täsmää!', { variant: 'error' });\n    } else {\n      update({ password: salasana1.value }).then(() => {\n        enqueueSnackbar('Salasana vaihdettu', { variant: 'info' });\n      }).catch(() => {\n        enqueueSnackbar('Virhe salasanaa vaihtaessa!', { variant: 'error' });\n      });\n    }\n    salasana1.value = '';\n    salasana2.value = '';\n  };\n  if (!me) {\n    return <LoadingPage />;\n  }\n  return (\n    <Container>\n      <Typography variant=\"h3\" gutterBottom>Asetukset</Typography>\n      <Grid container spacing={2} justifyContent=\"flex-start\" alignItems=\"center\" sx={{ width: { xs: '100%', md: '50%' } }}>\n        <Grid item xs={6}>Tunnus</Grid>\n        <Grid item xs={6}>{me.name}</Grid>\n        <Grid item xs={6}>Sähköposti</Grid>\n        <Grid item xs={6}>{me.email || 'Ei asetettu'}</Grid>\n      </Grid>\n      <Divider />\n      <Typography variant=\"h4\" gutterBottom>Vaihda email</Typography>\n      <form onSubmit={handleEmailChange}>\n        <TextField name=\"email\" label=\"Uusi sähköpostiosoite\" />\n        &nbsp;\n        <Button variant=\"contained\" type=\"submit\">Vaihda</Button>\n      </form>\n      <Divider />\n      <form onSubmit={handlePassWordChange}>\n        <Typography variant=\"h4\" gutterBottom>Vaihda salasana</Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField name=\"salasana1\" type=\"password\" label=\"Uusi salasana\" />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField name=\"salasana2\" type=\"password\" label=\"Vahvista salasana\" />\n          </Grid>\n          <Grid item xs={12}>\n            <Button type=\"submit\" variant=\"contained\">Vaihda</Button>\n          </Grid>\n        </Grid>\n      </form>\n      <Divider />\n      <Typography variant=\"h4\" gutterBottom>Aliakset</Typography>\n      <Typography paragraph>\n        Aliakset yhdistävät csv-tiedostossa olevat pelaajat tunnuksiin.\n      </Typography>\n      <Aliases />\n      <Divider />\n      <HideIfNotLogged rooli=\"admin\">\n        <AdminSetup />\n      </HideIfNotLogged>\n    </Container>\n  );\n};\n\nexport default Settings;\n","import { useQuery } from '@apollo/client';\nimport { useState, useEffect } from 'react';\nimport { GET_COMPETITIONS } from '../graphql/queries';\nimport calculateRanks from '../utils/competitionStuff';\n\nconst groupCompetitionsData = (data) => data.reduce((p, c) => {\n  let obj = p.find((x) => x.gameId === c.game);\n  if (!obj) {\n    obj = {\n      gameId: c.game,\n      date: new Date(+c.paivays).toLocaleString(),\n      course: {\n        name: c.name,\n        layout: c.layout,\n        par: c.par,\n      },\n      players: [],\n    };\n    p.push(obj);\n  }\n  obj.players.push({\n    name: c.playerName,\n    total: c.total,\n    plusminus: c.total - c.par,\n    hc: c.hc,\n    hcTotal: c.total - c.hc,\n    hcPlusminus: c.total - c.hc - c.par,\n  });\n  return p;\n}, []);\n\nconst useGetCompetitions = () => {\n  const compQuery = useQuery(GET_COMPETITIONS);\n  const [competitions, setCompetitions] = useState(null);\n  useEffect(() => {\n    if (compQuery && !compQuery.loading) {\n      let data = compQuery.data.getCompetitions;\n      data = groupCompetitionsData(data);\n      data = data.map((c) => calculateRanks(c));\n      setCompetitions(data);\n    }\n  }, [compQuery]);\n  return competitions;\n};\nexport default useGetCompetitions;\n","export default function calculateRanks(comp) {\n  const { players } = comp;\n  players.sort((a, b) => a.hcTotal - b.hcTotal);\n  let prevRank = 1;\n  const ret = players.map((c, i) => {\n    if (i === 0) return { ...c, rank: 1, points: 5 };\n    if (c.hcTotal > players[i - 1].hcTotal) prevRank += 1;\n    return {\n      ...c,\n      rank: prevRank,\n      points: (prevRank <= 5) ? (6 - prevRank) : 0,\n    };\n  });\n  return { ...comp, players: ret };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card, CardContent, CardHeader, TableContainer,\n  Table, TableHead, TableCell, TableRow, TableBody,\n} from '@mui/material';\n\nconst SingleCompetition = ({ competition }) => {\n  const {\n    course, date, players, gameId,\n  } = competition;\n  return (\n    <Card style={{ marginBottom: '20px' }}>\n      <CardHeader\n        title={course.name}\n        subheader={`${date} @ ${course.layout}`}\n      />\n      <CardContent>\n        <TableContainer>\n          <Table className=\"kisataulu\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Rank</TableCell>\n                <TableCell>Nimi</TableCell>\n                <TableCell>Total</TableCell>\n                <TableCell>+/-</TableCell>\n                <TableCell>HC</TableCell>\n                <TableCell>HC +/-</TableCell>\n                <TableCell>HC total</TableCell>\n                <TableCell>Points</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {players.map((p) => (\n                <TableRow key={gameId + p.name}>\n                  <TableCell>{p.rank}</TableCell>\n                  <TableCell>{p.name}</TableCell>\n                  <TableCell>{p.total}</TableCell>\n                  <TableCell>{p.plusminus}</TableCell>\n                  <TableCell>{p.hc}</TableCell>\n                  <TableCell>{p.hcPlusminus}</TableCell>\n                  <TableCell>{p.hcTotal}</TableCell>\n                  <TableCell>{p.points}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </CardContent>\n    </Card>\n  );\n};\n\nSingleCompetition.propTypes = {\n  competition: PropTypes.shape().isRequired,\n};\n\nexport default SingleCompetition;\n","import React from 'react';\nimport {\n  Container, Typography,\n} from '@mui/material';\nimport useGetCompetitions from '../../hooks/useGetCompetitions';\nimport SingleCompetition from './SingleCompetitions';\nimport LoadingPage from '../../components/LoadingPage';\n\nconst Competitions = () => {\n  const competitions = useGetCompetitions();\n  if (!competitions) {\n    return <LoadingPage />;\n  }\n  return (\n    <Container>\n      <Typography variant=\"h3\">Kilpailut</Typography>\n      {(competitions.length < 1 && (\n        <Typography paragraph>\n          Ei yhtään kilpailua? Erotkaa ryhmästä välittömästi!\n        </Typography>\n      ))}\n      {competitions.map((c) => <SingleCompetition competition={c} key={c.gameId} />)}\n    </Container>\n  );\n};\n\nexport default Competitions;\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n// import useMe from './hooks/useMe';\nimport Particles from 'react-tsparticles';\n\nimport Frontpage from './pages/Frontpage';\nimport ReadLogs from './pages/Logs/Logs';\nimport AppBar from './components/AppBar';\nimport LoggedUserProvider from './components/LoggedUserProvider';\nimport Stats from './pages/Stats/Stats';\nimport UploadCsv from './components/UploadCsv';\nimport Settings from './pages/Settings/Settings';\nimport Competitions from './pages/Competitions/Competitions';\n\nfunction App() {\n  return (\n    <LoggedUserProvider>\n      <AppBar />\n      <Routes>\n        <Route path=\"/\" element={<Frontpage />} />\n        <Route path=\"/competitions\" element={<Competitions />} />\n        <Route path=\"/stats\" element={<Stats />} />\n        <Route path=\"/upload\" element={<UploadCsv />} />\n        <Route path=\"/settings\" element={<Settings />} />\n        <Route path=\"/logs\" element={<ReadLogs />} />\n      </Routes>\n      <Particles\n        options={{\n          particles: {\n            color: {\n              value: '#5f5f5f',\n            },\n            size: {\n              random: true,\n              value: 3,\n            },\n            move: {\n              enable: true,\n            },\n            zIndex: 10000,\n          },\n          interactivity: {\n            events: {\n              onHover: {\n                enable: true,\n                mode: 'repulse',\n              },\n            },\n          },\n        }}\n      />\n    </LoggedUserProvider>\n  );\n}\n\nexport default App;\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { createUploadLink } from 'apollo-upload-client';\nimport { setContext } from '@apollo/client/link/context';\n\nconst authLink = setContext((_, { headers }) => {\n  const token = window.sessionStorage.getItem('suklaaJuna');\n  return {\n    headers: {\n      ...headers,\n      authorization: token,\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(createUploadLink({\n    uri: (process.env.NODE_ENV === 'development')\n      ? 'http://localhost:8080/graphql'\n      : 'https://risbeegomfkerho-env.eba-bw33rqyj.us-east-2.elasticbeanstalk.com/graphql',\n    credentials: 'include',\n  })),\n});\n\nexport default client;\n","import { createTheme } from '@mui/material/styles';\n\nconst Breakpoint = '@media screen and (min-width: 900px)';\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: 'Quicksand',\n  },\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#34568B',\n    },\n  },\n  components: {\n    MuiCard: {\n      styleOverrides: {\n        root: {\n          borderRadius: '15px',\n          paddingLeft: '10px',\n        },\n      },\n    },\n    MuiCardHeader: {\n      styleOverrides: {\n        title: {\n          [Breakpoint]: {\n            fontSize: '1.7vw',\n            margin: '0px',\n          },\n        },\n        subheader: {\n          margin: '0px',\n        },\n      },\n    },\n    MuiGrid: {\n      styleOverrides: {\n        root: {\n          [Breakpoint]: {\n            fontSize: '1.2rem',\n          },\n        },\n      },\n    },\n    MuiTextField: {\n      styleOverrides: {\n        root: {\n          // backgroundColor: 'black',\n        },\n      },\n      defaultProps: {\n        color: 'info',\n      },\n    },\n    MuiTypography: {\n      styleOverrides: {\n        root: {\n          margin: '10px 0px',\n        },\n        paragraph: {\n          margin: '4rem 0px',\n          fontSize: '1.2em',\n          [Breakpoint]: {\n            fontSize: '1.2vw',\n          },\n        },\n        h1: {\n          fontSize: '2.5rem',\n          [Breakpoint]: {\n            fontSize: '4vw',\n          },\n        },\n        h2: {\n          fontSize: '2.3rem',\n          [Breakpoint]: {\n            fontSize: '3vw',\n          },\n        },\n        h3: {\n          fontSize: '1.6rem',\n          [Breakpoint]: {\n            fontSize: '2vw',\n          },\n        },\n      },\n    },\n    MuiButton: {\n      defaultProps: {\n        variant: 'contained',\n      },\n    },\n    MuiDivider: {\n      styleOverrides: {\n        root: {\n          margin: '20px 0px',\n        },\n      },\n    },\n    MuiTableCell: {\n      styleOverrides: {\n        root: {\n          fontSize: '.6em',\n          [Breakpoint]: {\n            fontSize: '1.2em',\n          },\n        },\n      },\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from '@apollo/client';\nimport './index.css';\nimport { SnackbarProvider } from 'notistack';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from '@mui/material';\nimport App from './App';\nimport client from './utils/apolloClient';\nimport theme from './utils/theme';\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <SnackbarProvider maxSnack={5}>\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </ThemeProvider>\n    </SnackbarProvider>\n  </ApolloProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}